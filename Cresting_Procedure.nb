(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    558903,      10905]
NotebookOptionsPosition[    552570,      10697]
NotebookOutlinePosition[    552952,      10713]
CellTagsIndexPosition[    552909,      10710]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"rf", "[", "\[Phi]_", "]"}], ":=", 
  RowBox[{"rfamplitude", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{"crest", " ", "Degree"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Phi]", " ", "+", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "$PhaseResolution"}], "]"}], "]"}]}], ")"}], 
      "Degree"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7319085553432865`*^9, 3.731908593722286*^9}, {
  3.7319086274652863`*^9, 3.7319086342482862`*^9}, {3.731909894743286*^9, 
  3.7319099753462863`*^9}, {3.731925459648887*^9, 3.731925464887989*^9}, {
  3.7319255059377804`*^9, 3.73192551476755*^9}, {3.7319255742046547`*^9, 
  3.731925583261732*^9}, {3.731951097677846*^9, 3.731951116120446*^9}, {
  3.731951195625046*^9, 3.731951197450246*^9}},
 ExpressionUUID -> "f2e46a75-c5b0-41b8-bfb4-5541749b4e14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rf", "[", 
   RowBox[{"{", 
    RowBox[{"\[Phi]1_", ",", 
     RowBox[{"\[Phi]2_:", "0"}], ",", 
     RowBox[{"\[Phi]3_:", "0"}], ",", 
     RowBox[{"\[Phi]4_:", "0"}], ",", 
     RowBox[{"\[Phi]5_:", "0"}], ",", 
     RowBox[{"\[Phi]6_:", "0"}]}], "}"}], "]"}], ":=", 
  RowBox[{"Total", "[", 
   RowBox[{"rfamplitude", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "Degree"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "+", 
            RowBox[{"RandomVariate", "[", 
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"0", ",", "$PhaseResolution"}], "]"}], "]"}]}], ")"}], 
          "Degree"}]}], "]"}], "&"}], "/@", 
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4", ",", 
           "\[Phi]5", ",", "\[Phi]6"}], "}"}], ",", "crest"}], "}"}], "]"}]}],
      ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7319085553432865`*^9, 3.731908593722286*^9}, {
  3.7319086274652863`*^9, 3.7319086342482862`*^9}, {3.731909894743286*^9, 
  3.7319099753462863`*^9}, {3.731925459648887*^9, 3.731925464887989*^9}, {
  3.7319255059377804`*^9, 3.73192551476755*^9}, {3.7319255742046547`*^9, 
  3.731925583261732*^9}, {3.731951097677846*^9, 3.731951116120446*^9}, {
  3.731951195625046*^9, 3.731951197450246*^9}, {3.7320865832706614`*^9, 
  3.7320866610546045`*^9}, {3.73208673001614*^9, 3.7320867804073563`*^9}, {
  3.732086950983757*^9, 3.732086953072811*^9}},
 ExpressionUUID -> "f2e46a75-c5b0-41b8-bfb4-5541749b4e14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qe", "=", 
  RowBox[{"QuantityMagnitude", "[", 
   RowBox[{"UnitConvert", "[", 
    RowBox[{"Quantity", "[", "\"\<ElectronVolt\>\"", "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7319086862382865`*^9, 3.7319087066352863`*^9}, {
  3.7319089141102867`*^9, 3.7319089154542866`*^9}},
 ExpressionUUID -> "d23fd181-eb44-4ccf-9826-23a58f0be26c"],

Cell[BoxData["1.6021766208000000926`7.912454318800447*^-19"], "Output",
 CellChangeTimes->{{3.7319086997472863`*^9, 3.7319087070512867`*^9}, 
   3.7319089163862867`*^9, {3.7319099076202865`*^9, 3.7319099776032867`*^9}, 
   3.7319249695658336`*^9, 3.731925467680443*^9, {3.731925507794216*^9, 
   3.7319255157191687`*^9}, 3.7319255843233614`*^9, 3.7319261741324987`*^9, 
   3.7319262577096786`*^9, 3.731926350454392*^9, 3.731926551638238*^9, 
   3.7319269866485834`*^9, 3.731927536551723*^9, {3.7319276046432705`*^9, 
   3.7319276502288265`*^9}, {3.731927682278762*^9, 3.731927709526267*^9}, 
   3.7319279138927994`*^9, 3.731951125984646*^9, 3.731951200009646*^9, 
   3.7319513023382463`*^9, 3.732086508550316*^9, 3.7320869560232763`*^9, 
   3.732090107558071*^9},
 ExpressionUUID -> "21b9a883-5567-4902-9e8e-3853c351583f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", 
  RowBox[{"QuantityMagnitude", "[", 
   RowBox[{"UnitConvert", "[", 
    RowBox[{"Quantity", "[", "\"\<SpeedOfLight\>\"", "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7319087860252867`*^9, 3.7319087918722863`*^9}},
 ExpressionUUID -> "bbf529c7-8c58-4069-a62e-37feba254ae1"],

Cell[BoxData["299792458"], "Output",
 CellChangeTimes->{
  3.731908792474286*^9, {3.7319099076822863`*^9, 3.731909977658286*^9}, 
   3.731924969582842*^9, 3.731925467696043*^9, {3.731925507794216*^9, 
   3.731925515734769*^9}, 3.731925584338974*^9, 3.7319261741481004`*^9, 
   3.7319262577096786`*^9, 3.7319263504699936`*^9, 3.731926551653838*^9, 
   3.731926986664184*^9, 3.7319275365673237`*^9, {3.7319276046432705`*^9, 
   3.731927650244426*^9}, {3.731927682294361*^9, 3.7319277095418653`*^9}, 
   3.731927913908399*^9, 3.731951125984646*^9, 3.7319512000252457`*^9, 
   3.7319513023382463`*^9, 3.732086508743413*^9, 3.7320869560572968`*^9, 
   3.7320901078151417`*^9},
 ExpressionUUID -> "8e22815f-e62d-4842-8d1d-15f2f9b431d9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"B\[Rho]", "[", "p_", "]"}], ":=", 
  RowBox[{"Evaluate", "[", 
   RowBox[{"QuantityMagnitude", "[", 
    RowBox[{"UnitConvert", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Quantity", "[", 
        RowBox[{"p", ",", "\"\<eV/c\>\""}], "]"}], "/", 
       RowBox[{"Quantity", "[", "\"\<ElectronCharge\>\"", "]"}]}], ",", 
      "\"\<Tesla Meter\>\""}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7319090585582867`*^9, 3.7319090787792864`*^9}, {
  3.7319093221562862`*^9, 3.7319093253952866`*^9}, {3.7320933593558097`*^9, 
  3.732093359587927*^9}},
 ExpressionUUID -> "99748e6a-10b0-49b7-94f4-5cf26fd39d82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dipoleangle", "[", 
   RowBox[{"B_", ",", 
    RowBox[{"p_:", 
     SuperscriptBox["10", "6"]}]}], "]"}], ":=", 
  FractionBox[
   RowBox[{"B", " ", "dipoleLength"}], 
   RowBox[{"B\[Rho]", "[", "p", "]"}]]}]], "Input",
 CellChangeTimes->{{3.7319086639922867`*^9, 3.731908728875286*^9}, {
  3.7319087957182865`*^9, 3.7319088225812864`*^9}, {3.7319089783702865`*^9, 
  3.7319090077612867`*^9}, {3.7319090565632863`*^9, 3.7319090842272863`*^9}, {
  3.7319092033882866`*^9, 3.731909207651286*^9}, {3.731909314165286*^9, 
  3.731909316453286*^9}},
 ExpressionUUID -> "de7ed019-5d0d-4061-b7d5-1f428053c69f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"finalMomentum", "[", "\[Phi]_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"#", "<", "0.1"}], ",", "0.1", ",", "#"}], "]"}], "&"}], "[", 
   RowBox[{"(", 
    RowBox[{"startingP", "+", 
     RowBox[{"rf", "[", "\[Phi]", "]"}]}], ")"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7319093987922864`*^9, 3.7319094121902866`*^9}, {
  3.7319100188072863`*^9, 3.731910024934286*^9}, {3.7319101593502865`*^9, 
  3.731910162078286*^9}, {3.7320868952858686`*^9, 3.7320869015740166`*^9}, {
  3.732086962334445*^9, 3.7320869641973686`*^9}},
 ExpressionUUID -> "6f956d59-4fb1-4e88-9cb1-91c2261cd310"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bpmPosition", "[", 
   RowBox[{"B_", ",", "\[Phi]_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "finalmom", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"finalmom", "=", 
      RowBox[{"finalMomentum", "[", "\[Phi]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"#", "<", 
          RowBox[{"-", "10"}]}], ",", 
         RowBox[{"-", "10"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", ">", "10"}], ",", "10", ",", "#"}], "]"}]}], "]"}], 
       "&"}], "[", 
      RowBox[{"Mean", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["10", "3"], 
           RowBox[{"(", 
            RowBox[{"driftLength", "*", 
             RowBox[{"(", 
              RowBox[{"bpmangle", "-", 
               RowBox[{"dipoleangle", "[", 
                RowBox[{"B", ",", "finalmom"}], "]"}]}], ")"}]}], ")"}]}], 
          "+", 
          RowBox[{"RandomVariate", "[", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", "$BPMResolution"}], "]"}], "]"}]}], ",", 
         RowBox[{"{", "$BPMAverages", "}"}]}], "]"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7319091693432865`*^9, 3.7319092006432867`*^9}, {
   3.7319092812632866`*^9, 3.7319092853102865`*^9}, {3.7319094239182863`*^9, 
   3.7319094279252863`*^9}, {3.7319100989952865`*^9, 
   3.7319101228402863`*^9}, {3.7319102499052863`*^9, 
   3.7319102542402864`*^9}, {3.7319102942702866`*^9, 
   3.7319102996132865`*^9}, {3.7319275047451067`*^9, 
   3.7319275210671253`*^9}, {3.73192758046625*^9, 3.731927595760643*^9}, 
   3.73192763920487*^9, {3.731951264962446*^9, 3.731951290503446*^9}},
 ExpressionUUID -> "81364be7-b4e1-4621-ab66-77455af2597f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"B\[Rho]", "[", 
  RowBox[{"20", " ", 
   SuperscriptBox["10", "6"]}], "]"}]], "Input",
 CellChangeTimes->{{3.7320930983573074`*^9, 3.732093099757009*^9}}],

Cell[BoxData["0.0667128190396304099`7.6114243231364656"], "Output",
 CellChangeTimes->{3.732093101412848*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Params", "Section",
 CellChangeTimes->{{3.7319086124332867`*^9, 
  3.7319086131852865`*^9}},ExpressionUUID->"73114696-d0ca-4cb1-a223-\
a4e153314c41"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$BPMResolution", "=", "0.01"}], ";"}]], "Input",
 CellChangeTimes->{{3.7319275269242764`*^9, 3.7319275335076447`*^9}},
 ExpressionUUID -> "433ae58c-6dd3-479b-b108-86448aab5d67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$PhaseResolution", "=", "0.25"}]], "Input",
 CellChangeTimes->{{3.731951122097246*^9, 3.731951145229446*^9}, {
  3.731951301324246*^9, 3.731951301495846*^9}},
 ExpressionUUID -> "ca02228f-e796-43ea-b8c1-49334ad6a788"],

Cell[BoxData["0.25`"], "Output",
 CellChangeTimes->{{3.731951123438846*^9, 3.731951150665246*^9}, 
   3.7319512000720463`*^9, 3.731951302400646*^9, 3.732086510686386*^9, 
   3.7320901190107465`*^9},
 ExpressionUUID -> "8425c073-0b1b-42b1-97cf-94a8cb4b5ea3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$BPMAverages", "=", "1"}], ";"}]], "Input",
 CellChangeTimes->{{3.7319275994911385`*^9, 3.731927603954853*^9}},
 ExpressionUUID -> "20d1119c-c67d-4d98-b8f4-718c0bb6aba2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"crest", "=", "167"}], ";"}]], "Input",
 CellChangeTimes->{{3.7319086141232862`*^9, 3.7319086175932865`*^9}},
 ExpressionUUID -> "473f8b35-b68d-4409-a47c-6b46b59d7f46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rfamplitude", "=", 
   RowBox[{"20", " ", 
    SuperscriptBox["10", "6"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7319086383992863`*^9, 3.731908640927286*^9}, {
  3.7319095090882864`*^9, 3.7319095093052864`*^9}},
 ExpressionUUID -> "658d3834-64b4-423f-88c5-3c6b05d43813"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dipoleLength", "=", "0.2"}], ";"}]], "Input",
 CellChangeTimes->{{3.7319087184842863`*^9, 3.7319087241782866`*^9}, 
   3.7319090421342864`*^9},
 ExpressionUUID -> "af5e3388-2a0e-4dd0-b6a1-48fb8601cae6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"driftLength", "=", "0.2"}], ";"}]], "Input",
 CellChangeTimes->{{3.731909155816286*^9, 3.731909161526286*^9}, 
   3.7319102375372863`*^9, {3.7319102854942865`*^9, 3.731910286038286*^9}},
 ExpressionUUID -> "2177cb53-b0a4-4842-a33e-456aca679c51"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bpmangle", "=", 
   RowBox[{"45", "Degree"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7319092659282866`*^9, 3.7319092696472864`*^9}},
 ExpressionUUID -> "0d7a307f-f2ea-4509-ad75-4449cdf8fd01"],

Cell[BoxData[
 RowBox[{
  RowBox[{"startingP", "=", 
   RowBox[{"4.5", " ", 
    SuperscriptBox["10", "6"]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7319093675702868`*^9, 3.7319093805602865`*^9}},
 ExpressionUUID -> "3da8308b-b9a4-4174-80fd-9ead7f2d87a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"rf", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "360"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7319085955872865`*^9, 3.731908604394286*^9}},
 ExpressionUUID -> "2ff79290-0b20-40bf-a223-f8c73c9f6681"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$4562#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 360}, {-1.9999999727042645`*^7, 1.999999291010856*^7}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7319086206472864`*^9, 3.7319086438242865`*^9}, {
   3.7319088001562862`*^9, 3.7319088177942867`*^9}, 3.7319090434772863`*^9, 
   3.7319091160612864`*^9, 3.7319092886872864`*^9, 3.7319093302252865`*^9, 
   3.731909512269286*^9, 3.731909859526286*^9, {3.7319099078982863`*^9, 
   3.7319099778602867`*^9}, 3.731910028354286*^9, 3.7319101268902864`*^9, 
   3.7319101648082867`*^9, {3.7319102399822865`*^9, 3.7319102574642863`*^9}, {
   3.7319102882892866`*^9, 3.7319103026802864`*^9}, 3.731924972254177*^9, 
   3.7319254678052454`*^9, {3.731925507903418*^9, 3.731925515843971*^9}, 
   3.7319255844482594`*^9, 3.7319260025013723`*^9, 3.731926175084214*^9, 
   3.731926258645793*^9, 3.731926469673382*^9, 3.7319265517630453`*^9, 
   3.731926986773387*^9, 3.7319275366785264`*^9, {3.7319276047836742`*^9, 
   3.731927650369216*^9}, {3.7319276824191513`*^9, 3.731927709666656*^9}, 
   3.7319279140331984`*^9, {3.7319511262342463`*^9, 3.7319511508368464`*^9}, 
   3.731951200165646*^9, 3.731951302494246*^9, 3.7320865110035458`*^9, 
   3.732090119298899*^9},
 ExpressionUUID -> "cd666b9f-0496-4d08-ac68-c981bbc42661"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"dipoleangle", "[", 
    RowBox[{"B", ",", 
     RowBox[{"10", " ", 
      SuperscriptBox["10", "6"]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"B", ",", "0", ",", "0.002"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7319085955872865`*^9, 3.731908604394286*^9}, {
  3.731908743698286*^9, 3.731908774448286*^9}, {3.7319089642602863`*^9, 
  3.7319089647962866`*^9}, {3.731909025000286*^9, 3.7319090253362865`*^9}, {
  3.7319091204102864`*^9, 3.7319091251862864`*^9}, {3.731909216380286*^9, 
  3.7319092188432865`*^9}},
 ExpressionUUID -> "af0b2cb6-88d1-4bff-8702-871764b4151a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVxXk4lAkAB2BMOaYGQ3QQspZKjsYMZTM/V1vryDDjZuaLkGMZhly5xUeH
itnY1CPayOoi7EMpFM9sB2V2q1k0hQolaXezJe3uH+/zrgtL8IlQUlBQ8PzP
/wsot03ChX0OoT4ugV4PZh0gsLooEJ9l8xc1r5yQ3We36kTfY4ivsjlVQ7E8
2Sh7dnZpqL74FlvygilhyGbYh/lSE7pYyi48PPFhnWyRHSLuJJeJx9ljcoey
1TJ19Fpf6lAV/8k+Tp0K0pEZIHWxgasiXoIYw5uO2jJLlDO9kmqSdOA8yFI1
1HZEt6jcIm3EEPeeWv84+mwHaiqIV1/Uvsbz4rfLo0u8oLhyeZ1mxUY0sFTa
C6e58OTrP8q+YYVZt2MVUXf8ceqc0cfhJgbGstyjfReDUZ95If9FHAtHumz8
peoEzFpe95/+bIf3GuCofNqNNHZb3vXb9rAUPr91Q3MP2JsY86V8B2w2phxV
pESiKrVhr+sUENjB0943HYWwg1LTZj8n+O5mawk/R8Nm+cXUqhpn6AX9FPV+
Ohav2+4qMZVd0b777JYFSjwSjr4qdY3Yjg6zKbmemhAWJ0MTm5q+RXb/TU72
ohBDAyuP92vsRFN8eHadahKusszp9sHf4UaXqz9NUYSs2wW/CnrcsE137s1W
9WRoFj7J/WTsgTvydnmObgpGRaR4JtYTbN61bCptH8SH949XDO7C2oFDMv9V
qXB5Pb5Tos6BfO7ks0l6Gow2UA0ozRw0l/S6ipXT8e6j91HdcG+8M2uPoGhm
gIjou+Kr6gPthMnNbSqZ6N0TKozv9MGZ6y87zVfsx8FPSRbOsVw45iye6dDL
wuzG1ionDR56J7k2R+jZcHu7um5NNw/NwSn5Jvo5cPL4OdgwyhcunTFdOdRc
nHLs1Hqq5gemUv1kemEu3kjeRKZ1+GHYQyL6TTUPf0x7xDgI/PH3dCmXW5iH
67X3qcP0APQdYRxnUPOxbW5/0LlfAqBclG7KLM6H0ZPzDeYhgRhsu7u3R7EA
87x/yktpQfCaXkptLipAfHSKpU5LEJyTRxVuKRXisdaKyPTIYEwqnPKzKylE
PXdzdaVuCFb3RwXZ0Q5A2yIzb6wjBJ3PHrQEkgcgOvmSovp9KOgKxnEjtCIk
1uayArT5GE6iZxSUFkHqWBkR3saHpSHNtm1JMcyTHzJ2RgnAGpjhuJUUQ7Om
2n+TMoHLQwndCktJSAtEI9UqBM5PuK/foEKiKsotnKZGoO6DWZm3Ggljq/n4
mWUEftCTh9TSSDC7uEWX6QQywjnzLrokAoeprcy1BHa8t7YqNiNRuypdy4FJ
YERrrprmRiJywavyAovA7yb3KbYeJMzlpgYGdgQGbBtj+LtIXK2XbviylUBP
UNiWSz4k+mytnbpBoKH24RAnmMQU72XCdncCiYwWakUciYtbuv5q9SAQ41qW
eC2ehEhfnGm6i0CEX+zjcSGJhTHnYhVvAv4ZX51jpZBQF50+LfEjsK2n3OlR
FomHfikm9gEEWNKEhi85JE7YezQ2BhKwfOGusT6fhJHSx9aDIQSMqUtG0opI
TEwMfrMQSkBPX+5yhiTRKKnvjhMQ0LG81igpJRF/IXvHCEFA3bGSPneIhM0x
33ueYQRUfZLT1pSR+Be8DhqU
       "]]},
     Annotation[#, "Charting`Private`Tag$4666#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.002}, {0., 0.011991698075271465`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7319087696972866`*^9, 3.7319088178312864`*^9}, {
   3.7319089655162864`*^9, 3.731909046559286*^9}, {3.7319090873062863`*^9, 
   3.7319091260422864`*^9}, 3.7319092201432867`*^9, 3.7319092894142866`*^9, 
   3.7319093302682867`*^9, 3.731909512309286*^9, 3.7319099831142864`*^9, 
   3.7319100283952866`*^9, 3.7319101269322863`*^9, 3.731910164854286*^9, {
   3.7319102400222864`*^9, 3.731910257505286*^9}, {3.7319102883332863`*^9, 
   3.7319103027212863`*^9}, 3.7319249722781887`*^9, 3.731925467836446*^9, {
   3.731925507934619*^9, 3.731925515875171*^9}, 3.7319255844794836`*^9, 
   3.7319260025169764`*^9, 3.7319261751154184`*^9, 3.7319262586769967`*^9, 
   3.731926469704584*^9, 3.7319265517942476`*^9, 3.7319269868045874`*^9, 
   3.7319275367097273`*^9, {3.731927604814875*^9, 3.7319276504004135`*^9}, {
   3.731927682450349*^9, 3.7319277096978536`*^9}, 3.731927914064398*^9, {
   3.7319511262654457`*^9, 3.731951150868046*^9}, 3.731951200196846*^9, 
   3.731951302525446*^9, 3.73208651105157*^9, 3.7320901193279047`*^9},
 ExpressionUUID -> "1c04a483-bdfe-4777-b0b7-754e2e46b8d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bpmPosition", "[", 
  RowBox[{"0.3205", ",", "crest"}], "]"}]], "Input",
 CellChangeTimes->{
  3.7319093039252863`*^9, {3.7319100523012867`*^9, 3.7319100775472865`*^9}},
 ExpressionUUID -> "ab76812c-9336-4cc9-b295-ddeb81582225"],

Cell[BoxData["0.19732284954610196`"], "Output",
 CellChangeTimes->{{3.7319093041822863`*^9, 3.731909330290286*^9}, 
   3.7319095123292866`*^9, 3.7319099842022867`*^9, {3.731910028500286*^9, 
   3.731910077842286*^9}, 3.7319101269542866`*^9, 3.7319101648772864`*^9, {
   3.731910240045286*^9, 3.7319102575272865`*^9}, {3.731910288354286*^9, 
   3.731910302743286*^9}, 3.731924972290195*^9, 3.731925467836446*^9, {
   3.731925507950219*^9, 3.731925515890772*^9}, 3.7319255844950957`*^9, 
   3.7319260025325813`*^9, 3.7319261751466217`*^9, 3.7319262587082005`*^9, 
   3.7319264697201853`*^9, 3.7319265518098483`*^9, 3.731926986820188*^9, 
   3.7319275367253275`*^9, {3.731927604830476*^9, 3.7319276504160123`*^9}, {
   3.7319276824659476`*^9, 3.7319277097134523`*^9}, 3.731927914079998*^9, {
   3.731951126281046*^9, 3.731951150883646*^9}, 3.731951200212446*^9, 
   3.731951302541046*^9, 3.732086511063575*^9, 3.7320901193419204`*^9},
 ExpressionUUID -> "d47cdc77-a817-4e79-be6a-dc2320711009"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"bpmPosition", "[", 
    RowBox[{"B", ",", "167"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"B", ",", "0", ",", "0.4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7319085955872865`*^9, 3.731908604394286*^9}, {
   3.731908743698286*^9, 3.731908774448286*^9}, {3.7319089642602863`*^9, 
   3.7319089647962866`*^9}, {3.731909025000286*^9, 3.7319090253362865`*^9}, {
   3.7319091204102864`*^9, 3.7319091251862864`*^9}, {3.731909216380286*^9, 
   3.7319092334032865`*^9}, {3.7319093359242864`*^9, 
   3.7319093471072865`*^9}, {3.7319094356612864`*^9, 3.7319094485392866`*^9}, 
   3.73192655917352*^9},
 ExpressionUUID -> "7dc122e6-fadd-4da9-acda-965da1874337"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQvejVzpKz7Y52DGCg4iB178bFPJECexj/HFvMzlyR
Bjhf5KFvZO/BCXB+odHsx6xPZ8D5ciXdb8/nL4DzfxUm/l9zeAmcv06TT2L2
2RVwfjjLZTdJvbVw/uwOcTGRvRvg/O+vDXhU9m1CuCchjLfm1RY4f6LR84l3
Pm6D8wvmHi5kfb8Dzj8luSamTHw3nC/w+f+p91J74fyLd+NdNnruh/Ovb2jt
kd1+AM63UZy449m2g3B+7CylV8FnDsH5Xw9mxrqePwzne38yu3br+RE4X+/9
ypqQ30fh/LZZl1KC/hyD8+f4NQZ9EToB52tsfNooJX4Sznd68P6eitgpOF9S
osHxstZpOD/939GnrLpn4PzitxP777ichfN5VjKnTw8/B+dLCWs3XAs/D+d/
dso5f8fsApw/5fLc+gk7EPwar0Vu28wvwvmHj2YKrDuI4LtK8PxOd7oE5289
vO+jbgeCr5pf+OLzWQR/TRVjTvs7BN+obeJ7Kf7LcP637siNKfII/s6JisXr
9BF8rcmTHx8wRvBnTWENuWyO4KdKFp9LtUTwASSPzS0=
        "]], LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAzSIuyJM90z9qOP2fzNgjQHyX6TT4
P9M/PPKO2SO0I0A0mCJtAULTPwdwo4W7jiNA7ZhbpQpE0z9YGPRo6IUjQKaZ
lN0TRtM/cmbqgM9aI0Bems0VHUjTP/lLDsHROiNAQJ2x9kFQ0z9NEvMRacAi
QJLpRfdAUtM/viZpVpmjIkDjNdr3P1TTP1rAZKVQgCJAhs4C+T1Y0z9ojclD
cEciQMz/U/s5YNM/5ESJZBfPIUBYYvb/MXDTP7AppmzY3iBAcSc7CSKQ0z+3
6tJHJtIdQKKxxBsC0NM/p16YFKYoFkBjyppDlFrUP7ij/Jfh2/Y/X7pLjOjb
1D+dy7V7EngDwDCKeSUZ3tQ/oDm+8WntA8ACWqe+SeDUP9n3FQtKrATA0ynV
V3ri1D/4DpZKBR0FwKT5AvGq5NQ/wSNeUg6lBcDqOLpVbe3UP9KJyJ/kswfA
drcoH/L+1D9n3fhNRP8LwIy0BbL7IdU/zVIIV5ckEsBehDNLLCTVP4LUIfgV
dBLAL1Rh5Fwm1T9FPY/uzLgSwAAkj32NKNU/7uIVDC37EsDS87wWvirVP/o6
4USAKBPAGDN0e4Az1T+m0nP8ey8UwKOx4kQFRdU/8ya5vvVfFsC6rr/XDmjV
P0T64cwujhrAJMpIOTVq1T8uSD62rdwawI/l0ZpbbNU/aad0VgcSG8BkHORd
qHDVPx+frgmcmhvADooI5EF51T+3CaIhnZocwGJlUfB0itU/GufeoJefHsDM
gNpRm4zVPzubi9Fs1x7AN5xjs8GO1T+pGpzkDSIfwAzTdXYOk9U/jN96S4iw
H8C2QJr8p5vVP7xlD/p4WCDACxzjCNus1T/CJLyOFmQhwHY3bGoBr9U/S1wp
+LSBIcDgUvXLJ7HVPzDGMGqKmiHAS25+LU6z1T/TWTF+08shwLaJB490tdU/
KhKnd5TuIcAgpZDwmrfVP8xxnVvxBCLAi8AZUsG51T8AQSpOXSIiwPbborPn
u9U/rTW4w4I+IsBg9ysVDr7VPxFmTbe+YiLAyhK1djTA1T9mystrh4AiwDUu
PthawtU/zzvfoM2pIsAKZVCbp8bVP2jAYjpq7SLAtNJ0IUHP1T8oMr7OaG8j
wB7u/YJn0dU/uQqBwgmLI8CJCYfkjdPVP5ZDaRQ2siPA9CQQRrTV1T8UI8BJ
588jwObIhhfc1tU/waYk4lXfI8A2M7ui
        "]], 
       LineBox[{{0.341494099476482, -10.}, {0.34156213204356617`, -10.}, {
        0.3416933530991545, -10.}, {0.34182457415474277`, -10.}, {
        0.34234945837709596`, -10.}, {0.34287434259944916`, -10.}, {
        0.3467913824984278, -10.}, {0.35070842239740646`, -10.}, {
        0.35920292423158817`, -10.}, {0.36713335830607596`, -10.}, {
        0.37490788788617596`, -10.}, {0.3833428395025004, -10.}, {
        0.39121372335913096`, -10.}, {0.39560685759793285`, -10.}, {
        0.39999999183673474`, -10.}}]},
      Annotation[#, 
       "Charting`Private`Tag$4704#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.4}, {-10., 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7319092373242865`*^9, 3.7319092924252863`*^9, {3.7319093303262863`*^9, 
   3.7319093475322866`*^9}, {3.7319094387462864`*^9, 3.731909448814286*^9}, 
   3.7319095123662863`*^9, 3.7319099860512867`*^9, 3.7319100285542865`*^9, 
   3.7319100801092863`*^9, 3.7319101269992867`*^9, 3.7319101649212866`*^9, {
   3.7319102400982866`*^9, 3.7319102575632863`*^9}, {3.731910288394286*^9, 
   3.731910302783286*^9}, 3.7319249723182087`*^9, 3.731925467867646*^9, {
   3.7319255079814196`*^9, 3.7319255159219723`*^9}, 3.731925584510708*^9, 
   3.731926002563791*^9, 3.731926175177826*^9, 3.731926258739404*^9, 
   3.731926469751387*^9, {3.73192655184105*^9, 3.7319265594855404`*^9}, 
   3.731926986851389*^9, 3.7319275367565284`*^9, {3.731927604861676*^9, 
   3.7319276504472103`*^9}, {3.731927682497145*^9, 3.73192770974465*^9}, 
   3.7319279141111975`*^9, {3.731951126343446*^9, 3.7319511509304457`*^9}, 
   3.7319512002436457`*^9, 3.731951302572246*^9, 3.7320865110995927`*^9, 
   3.732090119390953*^9},
 ExpressionUUID -> "61d804b0-10c3-4588-8468-b4dd2948e92e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"bpmPosition", "[", 
    RowBox[{"0.31", ",", "\[Phi]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Phi]", ",", 
     RowBox[{"crest", "-", "25"}], ",", 
     RowBox[{"crest", "+", "25"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7319085955872865`*^9, 3.731908604394286*^9}, {
   3.731908743698286*^9, 3.731908774448286*^9}, {3.7319089642602863`*^9, 
   3.7319089647962866`*^9}, {3.731909025000286*^9, 3.7319090253362865`*^9}, {
   3.7319091204102864`*^9, 3.7319091251862864`*^9}, {3.731909216380286*^9, 
   3.7319092334032865`*^9}, {3.7319093359242864`*^9, 
   3.7319093471072865`*^9}, {3.7319094356612864`*^9, 3.7319094934252863`*^9}, 
   3.7319098317962866`*^9, {3.7319098667852864`*^9, 3.731909872585286*^9}, {
   3.731909996993286*^9, 3.7319100332382865`*^9}, {3.7319101400162864`*^9, 
   3.7319101436792865`*^9}, 3.7319102065882864`*^9, {3.7319102621122866`*^9, 
   3.7319102814472866`*^9}, {3.731925686700976*^9, 3.7319257233644266`*^9}},
 ExpressionUUID -> "d016ad9b-de9a-449c-95b1-03b19dacc82b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwU13c8l98XAHB7j8+wKStCooSsPCdatEQlEj4jFKmQ6CtUIkVFg1SoKEWl
JUncSlJGRJSQnRVC2fqd31+93q8+nuc+5557zrnq7P2Ou/l4eHjyxHl4/v9v
Xa0mHw9hwX37iMnnOvNIRtjTG0fRRcHdXVqp80ig1uqV0+hZXW7tIfo8YlP1
pTXkNQvOqevN3hacTxiHvSL/oh+VzBfQ7FIm7arjqkFvWOA+YDy201aFPC6L
Kf6NLtWip1YlKpPjBxU89r9lwbKRw/471iuTLUp35wbQjTvCLgb3KhG1t+ap
e0tYELVnfHfloAoZ9v24ogctfEcsaMtTZUJkdjbvfseCgO7YmpnfSuT8q/6w
DrTIb4M9GnwqxNMrTIVVygJ6iEO/xAYVYigtWdiC9nVIz9ISmE/mnl/f6fae
BcPJxwWiBFVIlafB9De0vbnpn8MhKiRVtDjFuYwF2zXy0/NPq5B9jzdbfEEX
Z1ztPLNUhVjtbP3m+IEFM196KkSdlImEwMHQanQ97+fP8bbzSFMOr+Kmjyz4
o33E6WShMsnZlphfjk789i3C4aIiCZvT2GFXzoIFTVftZb4qkvV3noyXovVu
XVqwfJ0KUXJYlbSqggWbVQQZ7Z+VSd9EnekbtOxCR86EhyIpuLG7nqpkwYdd
YXc+hCiR0/Z/D71Cn/YZ5mz2ViGuo9GyllX4PbmvNtZyFYnuNfln+egIj5b7
BWeVycSqrK2mn1ggt3mPvMJfRVL2y2zsCfqO15K8GFclknz5w4Wl1Sy4YAed
t02UiDfluuwhukdOKDvPT5mY9vR91q/B+P5nP3R+qTIRSvgv4B562vqP4Gy+
Mqk3l2DofGZBsKmg6yd7RXK7/dqjTPTVYYZ6RoMCCT6zeItmLb7v6SG9g+Eq
ZLVx0XA6WqhR9NfcTiUi07zp/Pw6FqzaKjMlZ6pIOk/+MLyGNshX/phho0ie
Ghz4pPiFBfG8rB27NyqRqAae/UnoD+/aafM2KJGtkQlSsvUsGNpKaXWOKBNN
XY0HiegnedoejkqKZKTm8UZaAwvEP0axvvEqkzdHbH/Fo633T+qZOiqTRM26
OPGvLOjMVhjz7lUg7Aqufixa13JPi7uvEjE69Kdc6BsLpJcFPvVWVyK886N9
o9Dc6vuLFNIUSHWpnDhfIwsKdA9/00hWJOn779yLQO8lT4y2fFEkBxTM7GfR
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
f4KnrCc=
       "]]},
     Annotation[#, "Charting`Private`Tag$4742#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{142., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{142, 192}, {-7.543078916229085, 5.367698043198276}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7319094641082864`*^9, 3.7319095124372864`*^9}, 
   3.7319098321172867`*^9, 3.7319098730222864`*^9, {3.7319099924402866`*^9, 
   3.7319100334832864`*^9}, 3.7319100811312866`*^9, {3.731910127104286*^9, 
   3.7319101650252867`*^9}, 3.7319102074702864`*^9, {3.7319102402272863`*^9, 
   3.731910302856286*^9}, 3.7319249723752375`*^9, 3.731925467898847*^9, {
   3.73192550801262*^9, 3.731925515984373*^9}, 3.731925584573157*^9, {
   3.731925689729743*^9, 3.731925723645446*^9}, 3.7319260026262093`*^9, 
   3.7319261752402334`*^9, 3.7319262588018117`*^9, 3.7319264698137913`*^9, 
   3.7319265518878536`*^9, 3.7319269869137907`*^9, 3.731927536928133*^9, {
   3.73192760501768*^9, 3.731927650618797*^9}, {3.7319276826687317`*^9, 
   3.731927709900638*^9}, 3.7319279142671967`*^9, {3.731951126686646*^9, 
   3.7319511513370457`*^9}, 3.731951200633646*^9, 3.731951303055846*^9, 
   3.7320865114827843`*^9, 3.7320901197171*^9},
 ExpressionUUID -> "238b9aaa-82f3-4ac7-9b5d-a1edbb669094"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Optimiser - 1 Cavity", "Section",
 CellChangeTimes->{{3.731910450755286*^9, 3.731910452427286*^9}, {
  3.7320868006554947`*^9, 3.7320868025574617`*^9}},
 ExpressionUUID -> "f4966159-24b9-451d-96c6-8df8b07b6340"],

Cell[BoxData[
 RowBox[{
  RowBox[{"findStartingPhase", "[", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "bpmpos", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"phase", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"B", "=", "0.3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"bpmpos", "=", 
      RowBox[{"bpmPosition", "[", 
       RowBox[{"B", ",", "phase"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"-", "10"}], "<", "bpmpos", "<", "10"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phase", "+=", "1"}], ";", "\[IndentingNewLine]", 
        RowBox[{"bpmpos", "=", 
         RowBox[{"bpmPosition", "[", 
          RowBox[{"B", ",", "phase"}], "]"}]}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "phase"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7319105615012865`*^9, 3.7319106450552864`*^9}, {
   3.731910688236286*^9, 3.7319107400492864`*^9}, {3.7319284193942976`*^9, 
   3.7319284590949535`*^9}, {3.731928521117442*^9, 3.7319285371428475`*^9}, 
   3.7319297287490864`*^9, {3.7319298076774154`*^9, 3.73192980800499*^9}, {
   3.7319300702619696`*^9, 3.7319300763146925`*^9}},
 ExpressionUUID -> "f8510e77-2463-41e9-9a0f-f2b657a65351"],

Cell[CellGroupData[{

Cell[BoxData["crest"], "Input",
 CellChangeTimes->{{3.7319285008956223`*^9, 3.731928502518033*^9}},
 ExpressionUUID -> "6be1a19a-68d1-4be2-9e11-121e7d97995c"],

Cell[BoxData["167"], "Output",
 CellChangeTimes->{
  3.7319285029704356`*^9, 3.7319296668838444`*^9, 3.7319297298410025`*^9, {
   3.7319297654912605`*^9, 3.7319298347971296`*^9}, 3.731929892780242*^9, {
   3.731929937390211*^9, 3.731929956592427*^9}, 3.7319300800586443`*^9, 
   3.731951126717846*^9, 3.731951159359446*^9, 3.731951200649246*^9, 
   3.731951303071446*^9, 3.7320865115057955`*^9},
 ExpressionUUID -> "c3b4a8f2-82e7-40b0-8e34-c57be8ec3085"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"findStartingPhase", "[", "]"}]], "Input",
 ExpressionUUID -> "f7bc075e-53dc-48f1-86a5-26b24c742f5b"],

Cell[BoxData["136"], "Output",
 CellChangeTimes->{{3.731928481621498*^9, 3.7319285255362988`*^9}, 
   3.731929667710581*^9, 3.7319297305117507`*^9, {3.731929765506859*^9, 
   3.731929834812729*^9}, 3.7319298927958403`*^9, {3.73192993740581*^9, 
   3.7319299566080265`*^9}, 3.731930080121043*^9, 3.731951126733446*^9, 
   3.731951159375046*^9, 3.7319512006804457`*^9, 3.731951303102646*^9, 
   3.732086511531809*^9},
 ExpressionUUID -> "23e83efc-7617-4596-a2b7-ec1c72e8922b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"findStartingB", "[", "phase_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "bpmpos", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"B", "=", "0.3"}], ";", "\[IndentingNewLine]", 
     RowBox[{"bpmpos", "=", 
      RowBox[{"bpmPosition", "[", 
       RowBox[{"B", ",", "phase"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"bpmpos", ">", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"bpmpos", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"B", "+=", "0.001"}], ";", "\[IndentingNewLine]", 
          RowBox[{"bpmpos", "=", 
           RowBox[{"bpmPosition", "[", 
            RowBox[{"B", ",", "phase"}], "]"}]}]}]}], "\[IndentingNewLine]", 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"bpmpos", "<", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"B", "-=", "0.001"}], ";", "\[IndentingNewLine]", 
          RowBox[{"bpmpos", "=", 
           RowBox[{"bpmPosition", "[", 
            RowBox[{"B", ",", "phase"}], "]"}]}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"bpmpos", "=", 
      RowBox[{"bpmPosition", "[", 
       RowBox[{"B", ",", "phase"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7319105615012865`*^9, 3.7319106450552864`*^9}, {
   3.731910688236286*^9, 3.7319107400492864`*^9}, {3.731928542946122*^9, 
   3.731928543975735*^9}, {3.7319297704048824`*^9, 3.7319297931861305`*^9}, 
   3.731929826124197*^9, {3.7319298564522643`*^9, 3.731929885148429*^9}, {
   3.731929944581258*^9, 3.7319300044334135`*^9}},
 ExpressionUUID -> "d8c1f136-8a68-4bd1-ab77-8e6dba76d836"],

Cell[BoxData[
 RowBox[{"gradient", ":=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"Fit", "[", 
     RowBox[{
      RowBox[{"bpmReadings", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "5"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "fitvar"}], "}"}], ",", "fitvar"}], "]"}], ",", 
    "fitvar"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7319129389972863`*^9, 3.7319129576422863`*^9}, {
  3.7319130426532865`*^9, 3.731913087130286*^9}},
 ExpressionUUID -> "4f0af44a-3571-417f-9295-17fe3a8dff62"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "optFunc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"optFunc", "[", 
   RowBox[{"phase_Real", "|", "phase_Integer"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "bpmpos", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"startbpmpos", "=", 
      RowBox[{"bpmpos", "=", 
       RowBox[{"bpmPosition", "[", 
        RowBox[{"B", ",", "phase"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"bpmpos", ">", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"bpmpos", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"B", "+=", "0.001"}], ";", "\[IndentingNewLine]", 
          RowBox[{"bpmpos", "=", 
           RowBox[{"bpmPosition", "[", 
            RowBox[{"B", ",", "phase"}], "]"}]}]}]}], "\[IndentingNewLine]", 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"bpmpos", "<", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"B", "-=", "0.001"}], ";", "\[IndentingNewLine]", 
          RowBox[{"bpmpos", "=", 
           RowBox[{"bpmPosition", "[", 
            RowBox[{"B", ",", "phase"}], "]"}]}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"offset", "+=", 
      RowBox[{"bpmpos", "-", "startbpmpos"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"bpmReadings", ",", 
        RowBox[{"{", 
         RowBox[{"phase", ",", 
          RowBox[{"bpmpos", "-", "offset"}]}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7319105615012865`*^9, 3.7319106450552864`*^9}, {
   3.7319108110292864`*^9, 3.731910839986286*^9}, {3.7319109518452864`*^9, 
   3.731910982177286*^9}, {3.731911036934286*^9, 3.7319110467752867`*^9}, {
   3.7319111809092865`*^9, 3.7319111828922863`*^9}, {3.7319112402332864`*^9, 
   3.7319113204042864`*^9}, {3.731911364321286*^9, 3.7319113977992864`*^9}, {
   3.7319114399242864`*^9, 3.7319114509872866`*^9}, {3.7319114930162864`*^9, 
   3.7319115607492867`*^9}, {3.731912341314286*^9, 3.7319123591292863`*^9}, {
   3.7319124233892865`*^9, 3.7319124238452864`*^9}, {3.731912916446286*^9, 
   3.7319129294682865`*^9}, {3.7319129667862864`*^9, 
   3.7319129732012863`*^9}, {3.7319130044162865`*^9, 3.731913017559286*^9}, 
   3.7319136847972865`*^9, 3.7319138373312864`*^9, {3.731913955691286*^9, 
   3.7319139641542864`*^9}, {3.731926811294798*^9, 3.731926838023941*^9}, {
   3.7319269719052057`*^9, 3.7319269755566993`*^9}},
 ExpressionUUID -> "34b72ba0-d0a8-47b6-9934-bb5d24b14990"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "DoOptimisation", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DoOptimisation", "[", "startingPhase_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"phasesign", "=", 
      RowBox[{"+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"offset", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"bpmReadings", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phase", "=", 
      RowBox[{"findStartingPhase", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"findStartingB", "[", "phase", "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<BPM = \>\"", ",", "phase", ",", "\"\< B = \>\"", ",", "B"}], 
        "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"phase", "+=", 
         RowBox[{"2", "phasesign"}]}], ";", 
        RowBox[{"optFunc", "[", "phase", "]"}]}], ",", 
       RowBox[{"{", "5", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"gradient", "<", "0"}], ",", 
       RowBox[{"phasesign", "=", 
        RowBox[{"-", "phasesign"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Gradient = \>\"", ",", "gradient"}], "]"}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"phasesign", " ", "gradient"}], ">", 
        RowBox[{"-", "1"}]}], " ", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"phase", "+=", 
         RowBox[{
          SqrtBox[
           RowBox[{"Max", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", 
               RowBox[{"Abs", "[", "gradient", "]"}]}], ",", "0.5"}], "}"}], 
            "]"}]], " ", "phasesign"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"optFunc", "[", "phase", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"guesscrest", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"bpmReadings", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"bpmReadings", ",", 
              RowBox[{"Max", "[", 
               RowBox[{"bpmReadings", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", "360"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"crest", "-", "guesscrest"}], ",", "\[IndentingNewLine]", 
       RowBox[{"crest", "-", 
        RowBox[{"(", 
         RowBox[{"\[Phi]", "/.", 
          RowBox[{"FindFit", "[", 
           RowBox[{"bpmReadings", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"fiteq", "=", 
               RowBox[{"a", "+", 
                RowBox[{"b", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{
                   RowBox[{"\[Phi]", " ", "Degree"}], "-", 
                   RowBox[{"x", " ", "Degree"}]}], "]"}]}]}]}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"guesscrest", "-", "20"}], ")"}], "<", "\[Phi]", "<", 
               RowBox[{"(", 
                RowBox[{"guesscrest", "+", "20"}], ")"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"a", ",", "b", ",", 
              RowBox[{"{", 
               RowBox[{"\[Phi]", ",", 
                RowBox[{"(", 
                 RowBox[{"guesscrest", "-", "20"}], ")"}]}], "}"}]}], "}"}], 
            ",", "x"}], "]"}]}], ")"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7319132574962864`*^9, 3.7319133543372865`*^9}, {
   3.7319134091662865`*^9, 3.7319134303462863`*^9}, {3.7319134693312864`*^9, 
   3.7319135231102867`*^9}, 3.7319135770362864`*^9, 3.7319136141852865`*^9, {
   3.731913693597286*^9, 3.7319136958432865`*^9}, {3.7319137374402866`*^9, 
   3.7319137398322864`*^9}, 3.7319137734802866`*^9, {3.7319138127562866`*^9, 
   3.7319138129242864`*^9}, {3.7319138464892864`*^9, 
   3.7319138616572866`*^9}, {3.7319138937602863`*^9, 3.7319139408432865`*^9}, 
   3.7319141697092867`*^9, {3.7319251234590807`*^9, 3.7319251432009907`*^9}, {
   3.731925623602667*^9, 3.731925668462924*^9}, {3.7319265721628923`*^9, 
   3.731926573537763*^9}, {3.7319271847416773`*^9, 3.7319272087420936`*^9}, {
   3.7319273700748367`*^9, 3.73192738499282*^9}, {3.7319277029179745`*^9, 
   3.7319279184031706`*^9}, {3.7319279682528505`*^9, 3.731928056194887*^9}, {
   3.731928157911436*^9, 3.731928158223434*^9}, {3.731928221504614*^9, 
   3.7319283080773787`*^9}, 3.731928556911301*^9, 3.7319300489612427`*^9, {
   3.731930106742302*^9, 3.7319301387766914`*^9}, {3.731930207412212*^9, 
   3.7319302136027327`*^9}, {3.731930267822801*^9, 3.731930291792001*^9}, {
   3.7319304030616007`*^9, 3.731930408604601*^9}, 3.731930534523801*^9, {
   3.7319376180590444`*^9, 3.7319376454238443`*^9}, {3.7319377510800447`*^9, 
   3.731937765861244*^9}, 3.7319508459522457`*^9},
 ExpressionUUID -> "b9029554-ff7e-4eb2-9a35-9f3c0ea15b61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$BPMResolution", "=", "0.1"}]], "Input",
 CellChangeTimes->{{3.7319275541081734`*^9, 3.7319275575130615`*^9}, 
   3.731930178753379*^9, 3.731930573452919*^9},
 ExpressionUUID -> "cd65b6a7-5fae-4e4b-9128-2aacc840aca4"],

Cell[BoxData["0.1`"], "Output",
 CellChangeTimes->{
  3.7319275578250694`*^9, {3.731927605080082*^9, 3.731927650665593*^9}, {
   3.7319276827155285`*^9, 3.731927920571556*^9}, {3.7319279564573264`*^9, 
   3.7319280829245157`*^9}, {3.73192816042502*^9, 3.731928180909689*^9}, {
   3.7319282248606358`*^9, 3.7319283093565874`*^9}, {3.7319283579553003`*^9, 
   3.7319283669397607`*^9}, 3.7319296275612106`*^9, 3.7319297351289954`*^9, 
   3.731930020407609*^9, {3.7319300538907795`*^9, 3.731930080167843*^9}, {
   3.7319301159773836`*^9, 3.731930139931077*^9}, 3.7319301824037323`*^9, 
   3.7319302152095118`*^9, 3.731930276901601*^9, 3.731930411163001*^9, 
   3.731930537222601*^9, 3.7319305802545624`*^9, 3.731937647034644*^9, 
   3.731937768142844*^9, 3.7319508501018457`*^9, 3.731951051438046*^9, 
   3.731951126764646*^9, 3.731951159421846*^9, 3.7319512007272463`*^9, 
   3.7319513031338463`*^9, 3.732086511612849*^9},
 ExpressionUUID -> "35bc923d-67a6-4d3e-9c42-e440ad76cfca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$BPMAverages", "=", "3"}]], "Input",
 CellChangeTimes->{{3.7319276102610965`*^9, 3.731927648213378*^9}, {
   3.7319305752313304`*^9, 3.7319305766509395`*^9}, {3.731951047299046*^9, 
   3.7319510483452463`*^9}, 3.731951162269446*^9, {3.7319512344112463`*^9, 
   3.731951253284646*^9}, 3.731951320807046*^9},
 ExpressionUUID -> "543e787b-2ea7-4f27-bb66-b208ac860508"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.7319276145195684`*^9, 3.731927650681192*^9}, {
   3.7319276827311273`*^9, 3.7319279205871563`*^9}, {3.7319279564573264`*^9, 
   3.731928082940116*^9}, {3.7319281604406195`*^9, 3.731928180925288*^9}, {
   3.7319282251414375`*^9, 3.731928309668589*^9}, {3.7319283579865007`*^9, 
   3.7319283669397607`*^9}, 3.731929627842016*^9, 3.7319297351289954`*^9, 
   3.7319300204232087`*^9, {3.7319300539063797`*^9, 3.7319300801834426`*^9}, {
   3.731930115992984*^9, 3.7319301402430725`*^9}, 3.7319301824193325`*^9, 
   3.731930215505908*^9, 3.731930276917201*^9, 3.731930411163001*^9, 
   3.731930537238201*^9, 3.731930580568565*^9, 3.7319376473622446`*^9, 
   3.731937768441244*^9, 3.7319508501486464`*^9, 3.731951051469246*^9, 
   3.731951126780246*^9, {3.731951159437446*^9, 3.731951162690646*^9}, 
   3.731951200742846*^9, 3.731951235035246*^9, {3.731951303149446*^9, 
   3.731951321602646*^9}, 3.7320865116238556`*^9},
 ExpressionUUID -> "9d4bf252-f8b9-4b5e-92c3-0391520aa089"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$PhaseResolution", "=", "0.1"}], ";"}]], "Input",
 CellChangeTimes->{{3.7319512209920464`*^9, 3.731951225797846*^9}, {
  3.731951327788246*^9, 3.731951356652646*^9}},
 ExpressionUUID -> "6ceeeba4-73fa-42e5-95f1-f725c0af2df6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"crest", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "360"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DoOptimisation", "[", "startingPhase", "]"}]}], "Input",
 ExpressionUUID -> "5876fdd6-c864-4175-9c73-e23a9a85702c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.0679903886216806`", ",", "0.17141346845585304`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.731930220950238*^9, 3.7319302389902077`*^9}, 
   3.731930277026401*^9, 3.731930411287801*^9, 3.731930537331801*^9, 
   3.7319305820817747`*^9, 3.7319376478166447`*^9, {3.7319377688644447`*^9, 
   3.7319377728278446`*^9}, 3.731950850304646*^9, 3.731951051562846*^9, 
   3.731951126858246*^9, {3.731951159531046*^9, 3.7319511632054462`*^9}, {
   3.731951200806246*^9, 3.731951235768446*^9}, {3.731951303258646*^9, 
   3.731951357419046*^9}, 3.731951917637246*^9, 3.7320865121391125`*^9},
 ExpressionUUID -> "3be1e6b2-1df2-4a56-a1ee-f5c7b805fe71"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"crest", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "360"}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"DoOptimisation", "[", "startingPhase", "]"}]}], ",", 
     RowBox[{"{", "500", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7319134828652864`*^9, {3.7319283354811554`*^9, 3.73192834706043*^9}, {
   3.731930148013773*^9, 3.7319301584344397`*^9}, 3.7319303189918013`*^9, {
   3.7319304218022013`*^9, 3.731930421895801*^9}, {3.731930568835289*^9, 
   3.7319305691784916`*^9}, {3.731950875187846*^9, 3.731950875281446*^9}, {
   3.731950935863446*^9, 3.7319509365966463`*^9}, {3.731951044627446*^9, 
   3.7319510450018463`*^9}, {3.731951385649846*^9, 3.731951386149046*^9}},
 ExpressionUUID -> "19b29fb1-ba01-41e3-9b59-0614548759f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "testdata", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "3", ",", "0.1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "Automatic"}], "}"}]}], 
   ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Max\>\"", ",", "\"\<Fit\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7319301666399345`*^9, 3.731930170260088*^9}, {
   3.731930256310001*^9, 3.731930258431601*^9}, {3.731930444617401*^9, 
   3.7319304465986013`*^9}, {3.7319305474104013`*^9, 3.731930561951645*^9}, {
   3.7319374341022444`*^9, 3.7319374412802444`*^9}, {3.7319377288784447`*^9, 
   3.7319377301888447`*^9}, {3.7319377813842444`*^9, 
   3.7319377817898445`*^9}, {3.7319378230868444`*^9, 
   3.7319378823498445`*^9}, {3.731950889750646*^9, 3.731950889781846*^9}, {
   3.7319509200582457`*^9, 3.731950928761446*^9}, 3.7319510337492456`*^9},
 ExpressionUUID -> "8b6041ad-3c10-4c58-ba60-d2fe64a656ff"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.26599999999999996`]]], 
       RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.26599999999999996`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{{
             RectangleBox[{-3., 0.}, {-2.9, 2}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2.9, 0.}, {-2.8, 1}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2.8, 0.}, {-2.7, 3}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2.7, 0.}, {-2.6, 2}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2.6, 0.}, {-2.5, 6}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2.5, 0.}, {-2.4, 4}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2.4, 0.}, {-2.3, 4}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2.3, 0.}, {-2.2, 8}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2.2, 0.}, {-2.1, 1}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2.1, 0.}, {-2., 9}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2., 0.}, {-1.9, 6}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.9, 0.}, {-1.7999999999999998`, 9}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.7999999999999998`, 0.}, {-1.7, 8}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.7, 0.}, {-1.5999999999999999`, 11}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.5999999999999999`, 0.}, {-1.5, 7}, 
              "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-1.5, 0.}, {-1.4, 7}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.4, 0.}, {-1.2999999999999998`, 11}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.2999999999999998`, 0.}, {-1.2, 5}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.2, 0.}, {-1.0999999999999999`, 10}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.0999999999999999`, 0.}, {-1., 9}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1., 0.}, {-0.8999999999999999, 9}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.8999999999999999, 
              0.}, {-0.7999999999999998, 14}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.7999999999999998, 
              0.}, {-0.6999999999999997, 16}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.6999999999999997, 
              0.}, {-0.5999999999999996, 12}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.5999999999999996, 0.}, {-0.5, 14}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.5, 0.}, {-0.3999999999999999, 15}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.3999999999999999, 
              0.}, {-0.2999999999999998, 16}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.2999999999999998, 
              0.}, {-0.19999999999999973`, 13}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.19999999999999973`, 
              0.}, {-0.09999999999999964, 12}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.09999999999999964, 0.}, {0., 12}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0., 0.}, {0.10000000000000009`, 17}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.10000000000000009`, 0.}, {
              0.20000000000000018`, 12}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.20000000000000018`, 0.}, {
              0.30000000000000027`, 14}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.30000000000000027`, 0.}, {
              0.40000000000000036`, 11}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.40000000000000036`, 0.}, {0.5, 10}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.5, 0.}, {0.6000000000000001, 12}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.6000000000000001, 0.}, {0.7000000000000002, 10}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.7000000000000002, 0.}, {0.8000000000000003, 8}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.8000000000000003, 0.}, {0.9000000000000004, 7}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.9000000000000004, 0.}, {1., 11}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1., 0.}, {1.1000000000000005`, 16}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.1000000000000005`, 0.}, {1.2000000000000002`, 9},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.2000000000000002`, 0.}, {1.2999999999999998`, 2},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.2999999999999998`, 0.}, {1.4000000000000004`, 6},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.4000000000000004`, 0.}, {1.5, 9}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.5, 0.}, {1.6000000000000005`, 8}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.6000000000000005`, 0.}, {1.7000000000000002`, 3},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.7000000000000002`, 0.}, {1.8000000000000007`, 3},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.8000000000000007`, 0.}, {1.9000000000000004`, 6},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.9000000000000004`, 0.}, {2., 6}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{2., 0.}, {2.1000000000000005`, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{2.1000000000000005`, 0.}, {2.2, 3}, 
              "RoundingRadius" -> 0]}}, {{
             RectangleBox[{2.2, 0.}, {2.3000000000000007`, 5}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{2.3000000000000007`, 0.}, {2.4000000000000004`, 4},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{2.4000000000000004`, 0.}, {2.5, 5}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{2.5, 0.}, {2.6000000000000005`, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{2.6000000000000005`, 0.}, {2.7, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{2.7, 0.}, {2.8000000000000007`, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{2.8000000000000007`, 0.}, {2.9000000000000004`, 1},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{2.9000000000000004`, 0.}, {3., 5}, 
              "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.26599999999999996`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{{
             
             RectangleBox[{-1.4, 0.}, {-1.2999999999999998`, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.0999999999999999`, 0.}, {-1., 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1., 0.}, {-0.8999999999999999, 6}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.8999999999999999, 0.}, {-0.7999999999999998, 7},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.7999999999999998, 
              0.}, {-0.6999999999999997, 13}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.6999999999999997, 
              0.}, {-0.5999999999999996, 12}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.5999999999999996, 0.}, {-0.5, 26}, 
              "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-0.5, 0.}, {-0.3999999999999999, 27}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.3999999999999999, 
              0.}, {-0.2999999999999998, 34}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.2999999999999998, 
              0.}, {-0.19999999999999973`, 36}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.19999999999999973`, 
              0.}, {-0.09999999999999964, 39}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.09999999999999964, 0.}, {0., 39}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0., 0.}, {0.10000000000000009`, 53}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.10000000000000009`, 0.}, {
              0.20000000000000018`, 51}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.20000000000000018`, 0.}, {
              0.30000000000000027`, 33}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.30000000000000027`, 0.}, {
              0.40000000000000036`, 30}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.40000000000000036`, 0.}, {0.5, 21}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.5, 0.}, {0.6000000000000001, 17}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.6000000000000001, 0.}, {0.7000000000000002, 12}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.7000000000000002, 0.}, {0.8000000000000003, 5}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.8000000000000003, 0.}, {0.9000000000000004, 8}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.9000000000000004, 0.}, {1., 3}, "RoundingRadius" -> 
              0]}}, {{
             
             RectangleBox[{1., 0.}, {1.1000000000000005`, 4}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.1000000000000005`, 0.}, {1.2000000000000002`, 1},
               "RoundingRadius" -> 
              0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, \
{}}}}}, {AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-3.12, 0.}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-3, 3}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Max\"", "\"Fit\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.26599999999999996`]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.26599999999999996`]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.97858, 0.678934, 0.157834]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.73193017086848*^9, 3.7319301879728613`*^9}, {
   3.7319302538140182`*^9, 3.731930288188401*^9}, 3.731930319834201*^9, 
   3.731930369778801*^9, {3.731930411459401*^9, 3.731930447191401*^9}, {
   3.731930539765401*^9, 3.7319305625912485`*^9}, 3.731930618486614*^9, {
   3.7319374374094443`*^9, 3.731937443248844*^9}, 3.7319376854870443`*^9, 
   3.7319377419480443`*^9, 3.7319377834746447`*^9, {3.7319378194052444`*^9, 
   3.7319378862820444`*^9}, 3.731950884756646*^9, {3.731950923555646*^9, 
   3.7319509291046457`*^9}, {3.7319510082036457`*^9, 3.731951059855446*^9}, 
   3.7319511337710457`*^9, 3.731951212173046*^9, 3.7319512499920464`*^9, {
   3.731951314778446*^9, 3.731951366040246*^9}, 3.731951430851246*^9, 
   3.732086547654894*^9},
 ExpressionUUID -> "653fa5f1-6bb9-4bfd-abf6-54a06cb3ad55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "bpmReadings", "]"}]], "Input",
 CellChangeTimes->{{3.7319111997872863`*^9, 3.7319112335372863`*^9}, 
   3.7319123940392866`*^9, 3.7319132410212865`*^9},
 ExpressionUUID -> "a6a1584a-998f-40ab-959a-fd8873e4406e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwlzn881HccB3BKc7vmWKLcdH7d1+b3Sg8PqnMvJ3t4oK441hSHUk0Pue/n
+83KKtFqhZpJYk3JKR5+nAxXPC53PJZJFqU6G9PDjwfbaobN3DRrlvfj8Xq8
Hs+/Xm+HhJTwxCVGRkaBC/m/F49GqPyvj+N7+LrXtKexJ3poRqdesWjQeCI7
dzYs1WTRcTRaP4wYs4ka1r72CRqJzVLp1KUZ8dCqU8VWuTTsz10YyV9qjMcl
RZOjV2loVjzPk1ZykO7smBNfS0PeEFMnjeNhM13qn9xCgypvkuxPehuy7YMW
JV00xlp+YpW5lnjwYGrT2h9ppLWVuPi5W+NOzwaD1zgNru8GXM5bjay+id7w
Pxf+Uwe5t/bwYbotI7XTmKD2evq4Ks0Wo1vHdxh4BI51Gsult9eA7EtMsXmH
oNTm2XTel3Z4IVFYFzsT2P3aEMUn9sjKVCb+tpYs7M4lXLB2wHttTxtEIgK1
24GPYq84oN2Ya3I+mOBwgolqKsgRewJEEYMRBN6H66dN8h2xJENR6iknqKy8
3Rpl64QSnXLqeBLBw5rj3tG1TvA30qP7EEGw5U2Px+8KMSDm5tplEOyLkK7r
uylEWrroWUoOQXGHpXOgKYXVWoWn7hKBMOyAtiWSgvpf5TELJYFKr4nZ8jUF
mb++K061YL6i2LyWwvQxrm1dE8HwhaDxuE4KuXdEB4zvEriR7uzTQxQ85xXN
23sILAbrcvoGKHRtKnuztJ9AE9YQI7lHIemofsf02MJer7aD94gCR8OtkEwT
XBN95/6DgcKNl6LZvHmCyIIny/eOUNi8kf5ghMPAuerImSt1FIbTyi56r2Sw
ObkydXUmhRPN+tGTdgxMqorOj4ZTEMxx1z92ZTDJa3uY/a0QGj//k0IfBvfs
fbKbdwsRfYR+xAYwUHb7hbrtFMJwu8zhbhgDc41EVf+FEwoMeoXVDgZ0+S/5
3CInrPddrkvczWBm3+TZLeZOePSJv7n6IAOvo+3MrUxHKG7RsW+kMejN9jZL
NziAN1tWE3WKQXNyAxUgdUC1T98/N3IZtN735rAx9ghJXR42e5mBPDSp4uAL
AciAelt7OYMzgfflMp4A1ckVVTn1DD7vN6NuDNoipKZ/bqCFwToStmtvIR8/
v+CFeHQy+GbUVSQLtsFggUhZ9IRBzcoJFV29ChZ+2qH6IQaRl6uNrx+zwtWu
iX7xBINgyU3p0qoVuHJ1eKv0JYOJcqk89qIFOj+9tnOOwyKv0eOM4dVbiG0M
rSiwZsFpPD+X3bEMetNz2y8JWXimGnuYtc6L97NNfBdvFt9nzXxGuUyKuwsy
3M5KWHwVZ1qw1rpHzJ8QrOKFs2jcOC1gX41onxfucnWNZxH6u5L3/qG/tWzh
0yCZgsWuFoVgje0y3R8C30JDOosH0dFep53NdP8BFTnWQQ==
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{271.125028249335, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{272., 327.9981920425627}, {-6.703496604597443, 
   10.986031913110141`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7319249725493245`*^9, {3.73192512915592*^9, 3.731925146491679*^9}, 
   3.731925516062375*^9, 3.7319255846512175`*^9, 3.7319256439679813`*^9, 
   3.731925674039482*^9, 3.7319260062465*^9, 3.731926059390909*^9, 
   3.7319261756614847`*^9, 3.7319262592230635`*^9, 3.7319264808829007`*^9, {
   3.73192655230908*^9, 3.731926575285053*^9}, {3.731926821265326*^9, 
   3.73192684102118*^9}, {3.7319269845113287`*^9, 3.731926987007393*^9}, {
   3.731927103651386*^9, 3.731927155251113*^9}, {3.7319271890805893`*^9, 
   3.73192721248619*^9}, 3.7319272614134455`*^9, 3.7319273917009916`*^9, 
   3.731927465741304*^9, {3.7319275370685363`*^9, 3.7319275595567136`*^9}, {
   3.731927605158084*^9, 3.73192765083718*^9}, {3.7319276828871155`*^9, 
   3.7319279206807556`*^9}, {3.731927956535326*^9, 3.731928033664632*^9}, {
   3.731928076822955*^9, 3.731928083018115*^9}, {3.731928160549819*^9, 
   3.7319281810032883`*^9}, {3.7319282636452875`*^9, 3.7319283110277977`*^9}, 
   3.7319283597649117`*^9, 3.731929634846551*^9, 3.7319296899156733`*^9, 
   3.7319300244011574`*^9, {3.731930128849219*^9, 3.7319301412882595`*^9}, {
   3.731930288250801*^9, 3.731930321222601*^9}, 3.731930373210801*^9, {
   3.7319304133158007`*^9, 3.731930426484201*^9}, 3.7319306365983305`*^9, 
   3.731950855050046*^9, 3.731951010699646*^9, 3.7319510746376457`*^9, 
   3.731951133833446*^9, 3.731951212204246*^9, {3.731951314795046*^9, 
   3.731951343741446*^9}, 3.731951436407846*^9, 3.732086547705919*^9},
 ExpressionUUID -> "9959224e-faae-4f4b-92bf-4e2c4247c7df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bpmReadings", "[", 
  RowBox[{"[", 
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{"bpmReadings", ",", 
      RowBox[{"Max", "[", 
       RowBox[{"bpmReadings", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.731927224872907*^9, 3.7319272477656946`*^9}},
 ExpressionUUID -> "99f68fff-eeb8-41e6-9091-f953f9505c73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"303.1412735385243`", ",", "10.986031913110141`"}], "}"}]], "Output",
 CellChangeTimes->{{3.731927248608116*^9, 3.7319272620706625`*^9}, 
   3.7319273940098505`*^9, 3.731927469067189*^9, {3.7319275370685363`*^9, 
   3.7319275648920507`*^9}, {3.731927605158084*^9, 3.731927650852779*^9}, {
   3.731927682902714*^9, 3.7319277210943785`*^9}, {3.731927751912009*^9, 
   3.731927812947485*^9}, {3.731927914423196*^9, 3.731927922958341*^9}, 
   3.7319281861376553`*^9, {3.7319282639572897`*^9, 3.731928312059405*^9}, 
   3.7319296362973785`*^9, 3.731930027101923*^9, {3.731930295114801*^9, 
   3.7319303217842007`*^9}, 3.731930377926001*^9, 3.731930427045801*^9, 
   3.7319306366451306`*^9, 3.731950857640646*^9, 3.731951012587246*^9, 
   3.7319511338490458`*^9, 3.731951212219846*^9, 3.7319513148262463`*^9, 
   3.731951346455846*^9, 3.731951436454646*^9, 3.7320865477189255`*^9},
 ExpressionUUID -> "441f231a-70aa-475d-99f7-685179c4785a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "bpmReadings", "]"}]], "Input",
 CellChangeTimes->{{3.7319276612415795`*^9, 3.731927665406459*^9}},
 ExpressionUUID -> "d6d61ccd-1c5b-40ea-85d3-ed41fe449bf5"],

Cell[BoxData["67"], "Output",
 CellChangeTimes->{{3.7319276658588247`*^9, 3.7319277211099777`*^9}, 
   3.731927770412755*^9, {3.7319279144387956`*^9, 3.7319279230207405`*^9}, 
   3.7319281861688547`*^9, {3.731928269791727*^9, 3.731928312543008*^9}, {
   3.731930295770001*^9, 3.731930322283401*^9}, 3.731930377959201*^9, 
   3.731930427482601*^9, 3.731930636660731*^9, 3.731950858483046*^9, 
   3.7319510132464457`*^9, 3.731951133864646*^9, 3.731951212235446*^9, 
   3.7319513148262463`*^9, 3.731951346502646*^9, 3.731951436454646*^9, 
   3.732086547730932*^9},
 ExpressionUUID -> "5f060156-3216-48da-9336-fea1a192507f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(", 
  RowBox[{"fitans", "=", 
   RowBox[{"FindFit", "[", 
    RowBox[{"bpmReadings", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fiteq", "=", 
        RowBox[{"a", "+", 
         RowBox[{"b", " ", 
          SuperscriptBox[
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"\[Phi]", " ", "Degree"}], "-", 
             RowBox[{"x", " ", "Degree"}]}], "]"}], "0.5"]}]}]}], ",", 
       RowBox[{"0", "<", "\[Phi]", "<", "360"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "phase"}], "}"}]}], "}"}], ",", "x"}], "]"}]}],
   ")"}]], "Input",
 CellChangeTimes->{{3.7319249827084017`*^9, 3.731925031693882*^9}, {
  3.731925074813631*^9, 3.7319250766709595`*^9}, {3.7319251620545745`*^9, 
  3.7319252126652365`*^9}, {3.7319253568675084`*^9, 3.7319253770467453`*^9}, {
  3.7319255232357163`*^9, 3.731925545115123*^9}, {3.7319255902559977`*^9, 
  3.7319256012812133`*^9}, {3.7319272886577444`*^9, 3.731927340342271*^9}, {
  3.731927942163818*^9, 3.731927942461216*^9}, {3.7319302006398983`*^9, 
  3.7319302022798777`*^9}, {3.7319303040848007`*^9, 3.7319303042252007`*^9}, {
  3.731930334935001*^9, 3.731930362041201*^9}, {3.731930495344201*^9, 
  3.7319305022238007`*^9}, {3.7319514416408463`*^9, 3.731951534197846*^9}, {
  3.7319519352022457`*^9, 3.731951965070046*^9}},
 ExpressionUUID -> "62f3636f-eb75-4213-abe1-765c5632c216"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"-", "258.5973493644115`"}]}], ",", 
   RowBox[{"b", "\[Rule]", "269.5160042875457`"}], ",", 
   RowBox[{"\[Phi]", "\[Rule]", "301.5524039456312`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.731925022537306*^9, 3.731925032128099*^9}, 
   3.7319250772640553`*^9, {3.731925130653741*^9, 3.731925213336136*^9}, 
   3.73192537829033*^9, {3.731925516124776*^9, 3.7319255470510354`*^9}, {
   3.731925584713667*^9, 3.7319256049344683`*^9}, {3.7319256474807262`*^9, 
   3.7319256741956043`*^9}, 3.7319260066366177`*^9, 3.731926059703003*^9, 
   3.7319261758487077`*^9, 3.731926259503897*^9, 3.731926315850977*^9, 
   3.731926519993409*^9, {3.7319265524338884`*^9, 3.731926575347456*^9}, {
   3.731926824946973*^9, 3.7319268410679803`*^9}, 3.7319269870697947`*^9, {
   3.7319271058354416`*^9, 3.7319271553135147`*^9}, {3.7319271900322137`*^9, 
   3.7319272136406193`*^9}, {3.7319272663607726`*^9, 3.7319273411066904`*^9}, 
   3.731927395491889*^9, 3.731927477157198*^9, {3.731927537130938*^9, 
   3.731927566327287*^9}, {3.7319276052204857`*^9, 3.731927650899575*^9}, {
   3.731927682965109*^9, 3.7319277101814165`*^9}, {3.731927914501195*^9, 
   3.731927943070612*^9}, 3.7319281862312546`*^9, {3.731928270524932*^9, 
   3.731928313229412*^9}, 3.7319302029038696`*^9, {3.7319302964408007`*^9, 
   3.7319303780216007`*^9}, {3.731930428013001*^9, 3.731930437404201*^9}, {
   3.731930495703001*^9, 3.731930503206601*^9}, 3.731930636707531*^9, 
   3.731950860043046*^9, 3.731951015293046*^9, 3.731951133927046*^9, 
   3.731951212282246*^9, 3.7319513149042463`*^9, 3.731951346549446*^9, {
   3.731951436502446*^9, 3.731951534463046*^9}, {3.731951921961446*^9, 
   3.7319519653040457`*^9}, 3.7320865477849584`*^9},
 ExpressionUUID -> "7bb9a104-5c23-411f-9f9a-277c49098ca9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["crest"], "Input",
 CellChangeTimes->{{3.731930389552001*^9, 3.7319303908156013`*^9}},
 ExpressionUUID -> "df3e6f4c-cc61-4427-af0d-7c8a635e7813"],

Cell[BoxData["301.13930585268315`"], "Output",
 CellChangeTimes->{
  3.731930391268001*^9, {3.731930428543401*^9, 3.731930437451001*^9}, 
   3.731930504127001*^9, 3.731930636723131*^9, 3.731950860668046*^9, 
   3.731951015698646*^9, 3.731951133942646*^9, 3.731951212297846*^9, 
   3.7319513149042463`*^9, 3.7319513465650463`*^9, {3.731951436518046*^9, 
   3.7319517311924458`*^9}, {3.731951770753846*^9, 3.731951965866646*^9}, 
   3.732086547797965*^9},
 ExpressionUUID -> "66fd048b-11e9-4ab2-ae66-fd68ab69e33c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fiteq", "/.", "fitans"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"crest", "-", "40"}], ",", 
       RowBox[{"crest", "+", "40"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", "bpmReadings", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.731925032960515*^9, 3.7319251017266808`*^9}, {
  3.7319272973199673`*^9, 3.7319273032677197`*^9}, {3.731930485278201*^9, 
  3.731930526125001*^9}},
 ExpressionUUID -> "337f5508-44c6-4bfd-a6fe-6ede179d1cec"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$76479#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwlzn881HccB3BKc7vmWKLcdH7d1+b3Sg8PqnMvJ3t4oK441hSHUk0Pue/n
+83KKtFqhZpJYk3JKR5+nAxXPC53PJZJFqU6G9PDjwfbaobN3DRrlvfj8Xq8
Hs+/Xm+HhJTwxCVGRkaBC/m/F49GqPyvj+N7+LrXtKexJ3poRqdesWjQeCI7
dzYs1WTRcTRaP4wYs4ka1r72CRqJzVLp1KUZ8dCqU8VWuTTsz10YyV9qjMcl
RZOjV2loVjzPk1ZykO7smBNfS0PeEFMnjeNhM13qn9xCgypvkuxPehuy7YMW
JV00xlp+YpW5lnjwYGrT2h9ppLWVuPi5W+NOzwaD1zgNru8GXM5bjay+id7w
Pxf+Uwe5t/bwYbotI7XTmKD2evq4Ks0Wo1vHdxh4BI51Gsult9eA7EtMsXmH
oNTm2XTel3Z4IVFYFzsT2P3aEMUn9sjKVCb+tpYs7M4lXLB2wHttTxtEIgK1
24GPYq84oN2Ya3I+mOBwgolqKsgRewJEEYMRBN6H66dN8h2xJENR6iknqKy8
3Rpl64QSnXLqeBLBw5rj3tG1TvA30qP7EEGw5U2Px+8KMSDm5tplEOyLkK7r
uylEWrroWUoOQXGHpXOgKYXVWoWn7hKBMOyAtiWSgvpf5TELJYFKr4nZ8jUF
mb++K061YL6i2LyWwvQxrm1dE8HwhaDxuE4KuXdEB4zvEriR7uzTQxQ85xXN
23sILAbrcvoGKHRtKnuztJ9AE9YQI7lHIemofsf02MJer7aD94gCR8OtkEwT
XBN95/6DgcKNl6LZvHmCyIIny/eOUNi8kf5ghMPAuerImSt1FIbTyi56r2Sw
ObkydXUmhRPN+tGTdgxMqorOj4ZTEMxx1z92ZTDJa3uY/a0QGj//k0IfBvfs
fbKbdwsRfYR+xAYwUHb7hbrtFMJwu8zhbhgDc41EVf+FEwoMeoXVDgZ0+S/5
3CInrPddrkvczWBm3+TZLeZOePSJv7n6IAOvo+3MrUxHKG7RsW+kMejN9jZL
NziAN1tWE3WKQXNyAxUgdUC1T98/N3IZtN735rAx9ghJXR42e5mBPDSp4uAL
AciAelt7OYMzgfflMp4A1ckVVTn1DD7vN6NuDNoipKZ/bqCFwToStmtvIR8/
v+CFeHQy+GbUVSQLtsFggUhZ9IRBzcoJFV29ChZ+2qH6IQaRl6uNrx+zwtWu
iX7xBINgyU3p0qoVuHJ1eKv0JYOJcqk89qIFOj+9tnOOwyKv0eOM4dVbiG0M
rSiwZsFpPD+X3bEMetNz2y8JWXimGnuYtc6L97NNfBdvFt9nzXxGuUyKuwsy
3M5KWHwVZ1qw1rpHzJ8QrOKFs2jcOC1gX41onxfucnWNZxH6u5L3/qG/tWzh
0yCZgsWuFoVgje0y3R8C30JDOosH0dFep53NdP8BFTnWQQ==
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{261.13930585268315`, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{261.13930585268315`, 
   341.13930585268315`}, {-23.423956737953773`, 10.918654044572918`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.73192503709258*^9, 3.731925198028279*^9}, 
   3.731925380303026*^9, {3.731925516171577*^9, 3.7319255471290965`*^9}, {
   3.7319255847605033`*^9, 3.731925605012529*^9}, {3.7319256475431747`*^9, 
   3.731925674258053*^9}, 3.731926006699036*^9, 3.731926059765422*^9, 
   3.731926175926717*^9, 3.7319262595663047`*^9, 3.731926315944588*^9, 
   3.731926520087015*^9, {3.731926552496292*^9, 3.7319265753942585`*^9}, {
   3.7319268249937735`*^9, 3.7319268437980156`*^9}, 3.7319269871165953`*^9, {
   3.731927106459458*^9, 3.731927155360316*^9}, {3.731927191186643*^9, 
   3.731927217369115*^9}, {3.731927290968604*^9, 3.731927341434299*^9}, 
   3.731927396006702*^9, 3.731927537177739*^9, 3.731927569977781*^9, {
   3.731927605267287*^9, 3.7319276509619703`*^9}, {3.7319276830119057`*^9, 
   3.731927710228213*^9}, {3.731927914547995*^9, 3.7319279440846057`*^9}, 
   3.731928186278054*^9, {3.731928271039735*^9, 3.7319283137598157`*^9}, {
   3.7319302971740007`*^9, 3.7319303780684013`*^9}, 3.731930429073801*^9, {
   3.7319304689420013`*^9, 3.731930526312201*^9}, 3.73193063961115*^9, 
   3.731950861677846*^9, 3.731951016385046*^9, 3.731951133990446*^9, 
   3.731951212344646*^9, 3.731951314951046*^9, 3.731951346611846*^9, {
   3.731951436564846*^9, 3.731951731800846*^9}, {3.731951771331046*^9, 
   3.731951966319046*^9}, 3.732086547873002*^9},
 ExpressionUUID -> "94c95b5a-95af-46fb-89a3-d2fc93157ac8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Optimiser - 6 Cavities", "Section",
 CellChangeTimes->{{3.731910450755286*^9, 3.731910452427286*^9}, {
  3.732086804530439*^9, 3.7320868077980723`*^9}},
 ExpressionUUID -> "f4966159-24b9-451d-96c6-8df8b07b6340"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "findStartingPhase", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.732087054021367*^9, 3.7320870554390717`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findStartingPhase", "[", 
   RowBox[{"n_:", "1"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "bpmpos", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bpmpos", "=", 
      RowBox[{"bpmPosition", "[", 
       RowBox[{"B", ",", "phase"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{
         RowBox[{"-", "5"}], "<", "bpmpos", "<", "5"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "+=", "1"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"bpmpos", "=", 
         RowBox[{"bpmPosition", "[", 
          RowBox[{"B", ",", "phase"}], "]"}]}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", "phase"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7319105615012865`*^9, 3.7319106450552864`*^9}, {
   3.731910688236286*^9, 3.7319107400492864`*^9}, {3.7319284193942976`*^9, 
   3.7319284590949535`*^9}, {3.731928521117442*^9, 3.7319285371428475`*^9}, 
   3.7319297287490864`*^9, {3.7319298076774154`*^9, 3.73192980800499*^9}, {
   3.7319300702619696`*^9, 3.7319300763146925`*^9}, {3.732087023575096*^9, 
   3.732087043559099*^9}, 3.732087170307564*^9, 3.732087324861931*^9, {
   3.7320873650070314`*^9, 3.7320873657584233`*^9}, {3.7320888754397097`*^9, 
   3.7320888756168203`*^9}, {3.732088922687374*^9, 3.7320889281701107`*^9}, 
   3.732088976432271*^9, {3.73208990314422*^9, 3.7320899054994106`*^9}},
 ExpressionUUID -> "f8510e77-2463-41e9-9a0f-f2b657a65351"],

Cell[CellGroupData[{

Cell[BoxData["crest"], "Input",
 CellChangeTimes->{{3.732089586808852*^9, 3.7320895874321623`*^9}}],

Cell[BoxData["167"], "Output",
 CellChangeTimes->{3.7320895879804354`*^9, 3.7320896397043304`*^9, 
  3.73208990983857*^9, 3.732090125750121*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["phase"], "Input",
 CellChangeTimes->{{3.732089653249111*^9, 3.7320896540635195`*^9}}],

Cell[BoxData["phase"], "Output",
 CellChangeTimes->{3.73208965438468*^9, 3.732089909878604*^9, 
  3.7320901257611246`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["B"], "Input",
 CellChangeTimes->{3.73208967649675*^9}],

Cell[BoxData["B"], "Output",
 CellChangeTimes->{3.732089676751878*^9, 3.732089909889595*^9, 
  3.732090125773133*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bpmPosition", "[", 
  RowBox[{"0.55", ",", 
   RowBox[{"{", 
    RowBox[{
    "210.46967132444684`", ",", "62", ",", "0", ",", "0", ",", "0", ",", 
     "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7320896197043176`*^9, 3.7320897290440793`*^9}}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"210.46967132444684`\\\", \\\",\\\", \\\
\"62\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \\\"0\\\", \
\\\",\\\", \\\"0\\\"}], \\\"}\\\"}], \\\",\\\", \\\"167\\\"}], \\\"}\\\"}]\\) \
cannot be transposed.\"",2,33,11,18615076351983318924,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7320901257861376`*^9}],

Cell[BoxData[
 TemplateBox[{
  "Transpose","nmtx",
   "\"The first two levels of \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"0.7224598424946822`\\\", \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.2542241309235911`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.973289641985131`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.973289641985131`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.973289641985131`\\\"}], \\\",\\\", RowBox[{\\\"-\\\", \
\\\"0.973289641985131`\\\"}]}], \\\"}\\\"}]\\) cannot be transposed.\"",2,33,
   12,18615076351983318924,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7320901258041477`*^9}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"0.007651862822550147`", "\[VeryThinSpace]", "+", 
     RowBox[{"200.`", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"45", " ", "\[Degree]"}], "-", 
        FractionBox["3.2977170380000003`*^7", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"2.45`*^7", "+", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"0.7224598424946822`", ",", 
                RowBox[{"-", "0.2542241309235911`"}], ",", 
                RowBox[{"-", "0.973289641985131`"}], ",", 
                RowBox[{"-", "0.973289641985131`"}], ",", 
                RowBox[{"-", "0.973289641985131`"}], ",", 
                RowBox[{"-", "0.973289641985131`"}]}], "}"}], "]"}]}], "<", 
            "0.1`"}], ",", "0.1`", ",", 
           RowBox[{"2.45`*^7", "+", 
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{"0.7224598424946822`", ",", 
               RowBox[{"-", "0.2542241309235911`"}], ",", 
               RowBox[{"-", "0.973289641985131`"}], ",", 
               RowBox[{"-", "0.973289641985131`"}], ",", 
               RowBox[{"-", "0.973289641985131`"}], ",", 
               RowBox[{"-", "0.973289641985131`"}]}], "}"}], "]"}]}]}], 
          "]"}]]}], ")"}]}]}], "<", 
    RowBox[{"-", "10"}]}], ",", 
   RowBox[{"-", "10"}], ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"0.007651862822550147`", "\[VeryThinSpace]", "+", 
       RowBox[{"200.`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"45", " ", "\[Degree]"}], "-", 
          FractionBox["3.2977170380000003`*^7", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"2.45`*^7", "+", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"0.7224598424946822`", ",", 
                  RowBox[{"-", "0.2542241309235911`"}], ",", 
                  RowBox[{"-", "0.973289641985131`"}], ",", 
                  RowBox[{"-", "0.973289641985131`"}], ",", 
                  RowBox[{"-", "0.973289641985131`"}], ",", 
                  RowBox[{"-", "0.973289641985131`"}]}], "}"}], "]"}]}], "<", 
              "0.1`"}], ",", "0.1`", ",", 
             RowBox[{"2.45`*^7", "+", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"0.7224598424946822`", ",", 
                 RowBox[{"-", "0.2542241309235911`"}], ",", 
                 RowBox[{"-", "0.973289641985131`"}], ",", 
                 RowBox[{"-", "0.973289641985131`"}], ",", 
                 RowBox[{"-", "0.973289641985131`"}], ",", 
                 RowBox[{"-", "0.973289641985131`"}]}], "}"}], "]"}]}]}], 
            "]"}]]}], ")"}]}]}], ">", "10"}], ",", "10", ",", 
     RowBox[{"0.007651862822550147`", "\[VeryThinSpace]", "+", 
      RowBox[{"200.`", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"45", " ", "\[Degree]"}], "-", 
         FractionBox["3.2977170380000003`*^7", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"2.45`*^7", "+", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"0.7224598424946822`", ",", 
                 RowBox[{"-", "0.2542241309235911`"}], ",", 
                 RowBox[{"-", "0.973289641985131`"}], ",", 
                 RowBox[{"-", "0.973289641985131`"}], ",", 
                 RowBox[{"-", "0.973289641985131`"}], ",", 
                 RowBox[{"-", "0.973289641985131`"}]}], "}"}], "]"}]}], "<", 
             "0.1`"}], ",", "0.1`", ",", 
            RowBox[{"2.45`*^7", "+", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"0.7224598424946822`", ",", 
                RowBox[{"-", "0.2542241309235911`"}], ",", 
                RowBox[{"-", "0.973289641985131`"}], ",", 
                RowBox[{"-", "0.973289641985131`"}], ",", 
                RowBox[{"-", "0.973289641985131`"}], ",", 
                RowBox[{"-", "0.973289641985131`"}]}], "}"}], "]"}]}]}], 
           "]"}]]}], ")"}]}]}]}], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.7320890508045044`*^9, 3.732089541833332*^9, 3.7320895825507298`*^9, {
   3.7320896202916117`*^9, 3.732089729203137*^9}, 3.732089909900601*^9, 
   3.7320901258271575`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["rfamplitude"], "Input",
 CellChangeTimes->{{3.732089693661365*^9, 3.7320896953381824`*^9}}],

Cell[BoxData["20000000"], "Output",
 CellChangeTimes->{3.7320896957854156`*^9, 3.732089909911607*^9, 
  3.7320901258491707`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"findStartingB", "[", "phase_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "bpmpos", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"bpmpos", "=", 
      RowBox[{"bpmPosition", "[", 
       RowBox[{"B", ",", "phase"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"bpmpos", ">", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"bpmpos", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"B", "+=", "0.001"}], ";", "\[IndentingNewLine]", 
          RowBox[{"bpmpos", "=", 
           RowBox[{"bpmPosition", "[", 
            RowBox[{"B", ",", "phase"}], "]"}]}]}]}], "\[IndentingNewLine]", 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"bpmpos", "<", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"B", "-=", "0.001"}], ";", "\[IndentingNewLine]", 
          RowBox[{"bpmpos", "=", 
           RowBox[{"bpmPosition", "[", 
            RowBox[{"B", ",", "phase"}], "]"}]}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"bpmpos", "=", 
      RowBox[{"bpmPosition", "[", 
       RowBox[{"B", ",", "phase"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7319105615012865`*^9, 3.7319106450552864`*^9}, {
   3.731910688236286*^9, 3.7319107400492864`*^9}, {3.731928542946122*^9, 
   3.731928543975735*^9}, {3.7319297704048824`*^9, 3.7319297931861305`*^9}, 
   3.731929826124197*^9, {3.7319298564522643`*^9, 3.731929885148429*^9}, {
   3.731929944581258*^9, 3.7319300044334135`*^9}, {3.732087368565811*^9, 
   3.7320873688939743`*^9}},
 ExpressionUUID -> "d8c1f136-8a68-4bd1-ab77-8e6dba76d836"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "gradient", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.732087736350461*^9, 3.732087737702139*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"gradient", "[", "n_", "]"}], ":=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"Fit", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bpmReadings", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1", ",", "n"}], "]"}], "]"}], ",", 
          RowBox[{"bpmReadings", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"-", "5"}], ";;", 
         RowBox[{"-", "1"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "fitvar"}], "}"}], ",", "fitvar"}], "]"}], ",", 
    "fitvar"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7319129389972863`*^9, 3.7319129576422863`*^9}, {
  3.7319130426532865`*^9, 3.731913087130286*^9}, {3.732087685012766*^9, 
  3.732087732550558*^9}},
 ExpressionUUID -> "4f0af44a-3571-417f-9295-17fe3a8dff62"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "optFunc", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"optFunc", "[", 
   RowBox[{"{", "phase__", "}"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "bpmpos", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"startbpmpos", "=", 
      RowBox[{"bpmpos", "=", 
       RowBox[{"bpmPosition", "[", 
        RowBox[{"B", ",", 
         RowBox[{"{", "phase", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"bpmpos", ">", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"bpmpos", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"B", "+=", "0.001"}], ";", "\[IndentingNewLine]", 
          RowBox[{"bpmpos", "=", 
           RowBox[{"bpmPosition", "[", 
            RowBox[{"B", ",", 
             RowBox[{"{", "phase", "}"}]}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"bpmpos", "<", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"B", "-=", "0.001"}], ";", "\[IndentingNewLine]", 
          RowBox[{"bpmpos", "=", 
           RowBox[{"bpmPosition", "[", 
            RowBox[{"B", ",", 
             RowBox[{"{", "phase", "}"}]}], "]"}]}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"offset", "+=", 
      RowBox[{"bpmpos", "-", "startbpmpos"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"bpmReadings", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "phase", "}"}], ",", 
          RowBox[{"bpmpos", "-", "offset"}], ",", "B"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7319105615012865`*^9, 3.7319106450552864`*^9}, {
   3.7319108110292864`*^9, 3.731910839986286*^9}, {3.7319109518452864`*^9, 
   3.731910982177286*^9}, {3.731911036934286*^9, 3.7319110467752867`*^9}, {
   3.7319111809092865`*^9, 3.7319111828922863`*^9}, {3.7319112402332864`*^9, 
   3.7319113204042864`*^9}, {3.731911364321286*^9, 3.7319113977992864`*^9}, {
   3.7319114399242864`*^9, 3.7319114509872866`*^9}, {3.7319114930162864`*^9, 
   3.7319115607492867`*^9}, {3.731912341314286*^9, 3.7319123591292863`*^9}, {
   3.7319124233892865`*^9, 3.7319124238452864`*^9}, {3.731912916446286*^9, 
   3.7319129294682865`*^9}, {3.7319129667862864`*^9, 
   3.7319129732012863`*^9}, {3.7319130044162865`*^9, 3.731913017559286*^9}, 
   3.7319136847972865`*^9, 3.7319138373312864`*^9, {3.731913955691286*^9, 
   3.7319139641542864`*^9}, {3.731926811294798*^9, 3.731926838023941*^9}, {
   3.7319269719052057`*^9, 3.7319269755566993`*^9}, {3.7320876313378887`*^9, 
   3.732087649967214*^9}, 3.7320879861055093`*^9, {3.7320887150614214`*^9, 
   3.7320887155436597`*^9}},
 ExpressionUUID -> "34b72ba0-d0a8-47b6-9934-bb5d24b14990"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "DoOptimisation", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DoOptimisation", "[", 
   RowBox[{"startingPhase_", ",", 
    RowBox[{"n_:", "1"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"rfamplitude", "[", 
       RowBox[{"[", "n", "]"}], "]"}], "=", 
      RowBox[{"20", " ", 
       SuperscriptBox["10", "6"]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"phasesign", "=", 
      RowBox[{"+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"offset", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"bpmReadings", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"n", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
       RowBox[{"B", "=", "0.2"}], ",", "\[IndentingNewLine]", 
       RowBox[{"B", "+=", "Badd"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"phase", "=", 
      RowBox[{"findStartingPhase", "[", "n", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "+=", 
         RowBox[{"3", "phasesign"}]}], ";", 
        RowBox[{"optFunc", "[", "phase", "]"}]}], ",", 
       RowBox[{"{", "5", "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"gradient", "[", "n", "]"}], "<", "0"}], ",", 
       RowBox[{"phasesign", "=", 
        RowBox[{"-", "phasesign"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"phasesign", " ", 
         RowBox[{"gradient", "[", "n", "]"}]}], "<", 
        FractionBox["1", "n"]}], ",", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"phasesign", " ", 
           RowBox[{"gradient", "[", "n", "]"}]}], "<", 
          FractionBox["1", "n"]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"phase", "[", 
            RowBox[{"[", "n", "]"}], "]"}], "+=", 
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              RowBox[{"Max", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"20", " ", "n", " ", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"gradient", "[", "n", "]"}], "]"}]}], ",", "1"}], 
                "}"}], "]"}]]}], " ", "phasesign"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"optFunc", "[", "phase", "]"}]}]}], "\[IndentingNewLine]", 
        "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"phasesign", " ", 
         RowBox[{"gradient", "[", "n", "]"}]}], ">", 
        FractionBox[
         RowBox[{"-", "1", " "}], "n"]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"phase", "[", 
          RowBox[{"[", "n", "]"}], "]"}], "+=", 
         RowBox[{
          SqrtBox[
           RowBox[{"Max", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"20", " ", "n", " ", 
               RowBox[{"Abs", "[", 
                RowBox[{"gradient", "[", "n", "]"}], "]"}]}], ",", "1"}], 
             "}"}], "]"}]], " ", "phasesign"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"optFunc", "[", "phase", "]"}]}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"guesscrest", "=", 
      RowBox[{"Mod", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"bpmReadings", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"bpmReadings", ",", 
              RowBox[{"Max", "[", 
               RowBox[{"bpmReadings", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "n"}], "]"}], "]"}], ",", "360"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"B", "=", 
      RowBox[{
       RowBox[{"bpmReadings", "[", 
        RowBox[{"[", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"bpmReadings", ",", 
            RowBox[{"Max", "[", 
             RowBox[{"bpmReadings", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"-", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"finalcrest", "=", 
      RowBox[{"(", 
       RowBox[{"\[Phi]", "/.", 
        RowBox[{"FindFit", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"bpmReadings", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1", ",", "n"}], "]"}], "]"}], ",", 
             RowBox[{"bpmReadings", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"fiteq", "=", 
             RowBox[{"a", "+", 
              RowBox[{"b", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{
                 RowBox[{"\[Phi]", " ", "Degree"}], "-", 
                 RowBox[{"x", " ", "Degree"}]}], "]"}]}]}]}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"guesscrest", "-", "20"}], ")"}], "<", "\[Phi]", "<", 
             RowBox[{"(", 
              RowBox[{"guesscrest", "+", "20"}], ")"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b", ",", 
            RowBox[{"{", 
             RowBox[{"\[Phi]", ",", 
              RowBox[{"(", "guesscrest", ")"}]}], "}"}]}], "}"}], ",", "x"}], 
         "]"}]}], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"phase", "[", 
       RowBox[{"[", "n", "]"}], "]"}], "=", "finalcrest"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"Length", "[", "bpmReadings", "]"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"crest", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "-", "guesscrest"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"crest", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "-", "finalcrest"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7319132574962864`*^9, 3.7319133543372865`*^9}, {
   3.7319134091662865`*^9, 3.7319134303462863`*^9}, {3.7319134693312864`*^9, 
   3.7319135231102867`*^9}, 3.7319135770362864`*^9, 3.7319136141852865`*^9, {
   3.731913693597286*^9, 3.7319136958432865`*^9}, {3.7319137374402866`*^9, 
   3.7319137398322864`*^9}, 3.7319137734802866`*^9, {3.7319138127562866`*^9, 
   3.7319138129242864`*^9}, {3.7319138464892864`*^9, 
   3.7319138616572866`*^9}, {3.7319138937602863`*^9, 3.7319139408432865`*^9}, 
   3.7319141697092867`*^9, {3.7319251234590807`*^9, 3.7319251432009907`*^9}, {
   3.731925623602667*^9, 3.731925668462924*^9}, {3.7319265721628923`*^9, 
   3.731926573537763*^9}, {3.7319271847416773`*^9, 3.7319272087420936`*^9}, {
   3.7319273700748367`*^9, 3.73192738499282*^9}, {3.7319277029179745`*^9, 
   3.7319279184031706`*^9}, {3.7319279682528505`*^9, 3.731928056194887*^9}, {
   3.731928157911436*^9, 3.731928158223434*^9}, {3.731928221504614*^9, 
   3.7319283080773787`*^9}, 3.731928556911301*^9, 3.7319300489612427`*^9, {
   3.731930106742302*^9, 3.7319301387766914`*^9}, {3.731930207412212*^9, 
   3.7319302136027327`*^9}, {3.731930267822801*^9, 3.731930291792001*^9}, {
   3.7319304030616007`*^9, 3.731930408604601*^9}, 3.731930534523801*^9, {
   3.7319376180590444`*^9, 3.7319376454238443`*^9}, {3.7319377510800447`*^9, 
   3.731937765861244*^9}, 3.7319508459522457`*^9, {3.73208737649478*^9, 
   3.732087376735901*^9}, {3.7320874175603385`*^9, 3.732087420709916*^9}, {
   3.732087472087638*^9, 3.7320874816924477`*^9}, {3.732087678900699*^9, 
   3.7320876794909954`*^9}, {3.732087785601121*^9, 3.7320878133680487`*^9}, {
   3.7320878617132235`*^9, 3.7320878967057595`*^9}, {3.7320881997776866`*^9, 
   3.732088452079999*^9}, {3.732088507343666*^9, 3.7320886942920322`*^9}, 
   3.732088727600696*^9, {3.7320887858248453`*^9, 3.7320888176928034`*^9}, {
   3.732088950968523*^9, 3.732088987940054*^9}, 3.732089332417492*^9, {
   3.732089406113386*^9, 3.732089419993349*^9}, 3.732089453089904*^9, {
   3.732089763897506*^9, 3.732089764088602*^9}, {3.732090385480153*^9, 
   3.732090385860346*^9}, {3.7320904293160973`*^9, 3.7320904360184555`*^9}, {
   3.732090504347664*^9, 3.73209055318511*^9}, {3.73209096169463*^9, 
   3.732090985877762*^9}, {3.7320910625701303`*^9, 3.7320911182510076`*^9}, {
   3.732091150668234*^9, 3.732091180866352*^9}, 3.732091264027999*^9, {
   3.7320913537569113`*^9, 3.7320913564352503`*^9}, {3.732091429143656*^9, 
   3.7320914311816797`*^9}, {3.732091514439356*^9, 3.7320915195138927`*^9}, {
   3.7320916366425314`*^9, 3.732091639385905*^9}},
 ExpressionUUID -> "b9029554-ff7e-4eb2-9a35-9f3c0ea15b61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"bpmReadings", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"Position", "[", 
      RowBox[{"bpmReadings", ",", 
       RowBox[{"Max", "[", 
        RowBox[{"bpmReadings", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7320887609274096`*^9, 3.732088776894374*^9}}],

Cell[BoxData["1.6299999999999797`"], "Output",
 CellChangeTimes->{{3.732088761506671*^9, 3.732088820391163*^9}, 
   3.732088883692854*^9, 3.7320889328004265`*^9, {3.7320889650575776`*^9, 
   3.73208899187101*^9}, 3.732089335415992*^9, 3.7320894231088943`*^9, 
   3.732089456086405*^9, 3.7320897678314843`*^9, 3.732089910012657*^9, 
   3.7320901260112514`*^9, 3.7320903915221767`*^9, 3.732090440670781*^9, {
   3.732090511897442*^9, 3.732090555968505*^9}, {3.732090964986275*^9, 
   3.7320909898987465`*^9}, 3.7320910683210087`*^9, {3.732091099058397*^9, 
   3.7320911226181917`*^9}, {3.7320911596097107`*^9, 3.7320911839198804`*^9}, 
   3.7320912675957727`*^9, 3.732091359771928*^9, 3.7320915247305155`*^9, 
   3.7320916430137215`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["crest"], "Input",
 CellChangeTimes->{3.732088482425211*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "152.4508676126918`", ",", "49.054329562570445`", ",", "203.5925590697185`",
    ",", "185.9517137396724`", ",", "223.616519370878`", ",", 
   "242.49162456207284`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7320875169311023`*^9, 3.7320876530827737`*^9, 3.7320877425415735`*^9, 
   3.732087820175429*^9, {3.732087875393083*^9, 3.732087899801303*^9}, 
   3.7320879904206705`*^9, 3.732088034856905*^9, 3.732088208499054*^9, {
   3.7320883079778557`*^9, 3.732088331838803*^9}, 3.7320884363901567`*^9, 
   3.732088482796377*^9, 3.7320885535047765`*^9, 3.7320886027864485`*^9, {
   3.73208863293155*^9, 3.732088665761524*^9}, {3.7320887201349583`*^9, 
   3.7320887305391674`*^9}, {3.7320887917888308`*^9, 3.7320888204391747`*^9}, 
   3.7320888837068615`*^9, 3.732088932810444*^9, {3.7320889650935946`*^9, 
   3.7320889919090204`*^9}, 3.732089335457012*^9, 3.7320894231469135`*^9, 
   3.732089456126425*^9, 3.7320897678684945`*^9, 3.7320899100227127`*^9, 
   3.7320901260222654`*^9, 3.7320903915621967`*^9, 3.7320904407087994`*^9, {
   3.732090511929457*^9, 3.73209055601654*^9}, {3.732090965036313*^9, 
   3.7320909899367647`*^9}, 3.732091068359027*^9, {3.73209109909645*^9, 
   3.7320911226582117`*^9}, {3.732091159647729*^9, 3.7320911839558983`*^9}, 
   3.732091267632791*^9, 3.7320913598089385`*^9, 3.732091524777527*^9, 
   3.732091643054742*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"phase", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.732087520639945*^9, 3.732087522086689*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$BPMResolution", "=", "0.01"}]], "Input",
 CellChangeTimes->{{3.7319275541081734`*^9, 3.7319275575130615`*^9}, 
   3.731930178753379*^9, 3.731930573452919*^9, 3.7320874239895573`*^9},
 ExpressionUUID -> "cd65b6a7-5fae-4e4b-9128-2aacc840aca4"],

Cell[BoxData["0.01`"], "Output",
 CellChangeTimes->{
  3.7319275578250694`*^9, {3.731927605080082*^9, 3.731927650665593*^9}, {
   3.7319276827155285`*^9, 3.731927920571556*^9}, {3.7319279564573264`*^9, 
   3.7319280829245157`*^9}, {3.73192816042502*^9, 3.731928180909689*^9}, {
   3.7319282248606358`*^9, 3.7319283093565874`*^9}, {3.7319283579553003`*^9, 
   3.7319283669397607`*^9}, 3.7319296275612106`*^9, 3.7319297351289954`*^9, 
   3.731930020407609*^9, {3.7319300538907795`*^9, 3.731930080167843*^9}, {
   3.7319301159773836`*^9, 3.731930139931077*^9}, 3.7319301824037323`*^9, 
   3.7319302152095118`*^9, 3.731930276901601*^9, 3.731930411163001*^9, 
   3.731930537222601*^9, 3.7319305802545624`*^9, 3.731937647034644*^9, 
   3.731937768142844*^9, 3.7319508501018457`*^9, 3.731951051438046*^9, 
   3.731951126764646*^9, 3.731951159421846*^9, 3.7319512007272463`*^9, 
   3.7319513031338463`*^9, 3.732086511612849*^9, 3.7320868250617113`*^9, 
   3.7320874244808164`*^9, 3.73208749795959*^9, {3.7320878755021257`*^9, 
   3.7320878999103575`*^9}, 3.7320880348999295`*^9, 3.7320882085560813`*^9, {
   3.7320883080228777`*^9, 3.7320883318938293`*^9}, 3.7320884405562296`*^9, 
   3.7320885535467973`*^9, 3.7320886028344727`*^9, {3.7320886329795647`*^9, 
   3.7320886658025446`*^9}, {3.7320887201539803`*^9, 
   3.7320887305861907`*^9}, {3.73208879180684*^9, 3.732088820464187*^9}, 
   3.7320888837248707`*^9, 3.732088932832443*^9, {3.732088965111603*^9, 
   3.7320889919320297`*^9}, 3.732089335478035*^9, 3.7320894231669235`*^9, 
   3.732089456144433*^9, 3.7320894997742853`*^9, 3.7320897678875036`*^9, 
   3.732089910039683*^9, 3.7320901260432673`*^9, 3.7320903915782046`*^9, 
   3.73209044072781*^9, {3.7320905119474654`*^9, 3.73209055604154*^9}, {
   3.7320909650573096`*^9, 3.732090989956791*^9}, 3.7320910683860407`*^9, {
   3.7320910991174374`*^9, 3.73209112267522*^9}, {3.7320911596697397`*^9, 
   3.732091183974908*^9}, 3.732091267651801*^9, 3.7320913598279467`*^9, 
   3.73209152479955*^9, 3.7320916430757637`*^9},
 ExpressionUUID -> "35bc923d-67a6-4d3e-9c42-e440ad76cfca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$BPMAverages", "=", "1"}]], "Input",
 CellChangeTimes->{{3.7319276102610965`*^9, 3.731927648213378*^9}, {
   3.7319305752313304`*^9, 3.7319305766509395`*^9}, {3.731951047299046*^9, 
   3.7319510483452463`*^9}, 3.731951162269446*^9, {3.7319512344112463`*^9, 
   3.731951253284646*^9}, 3.731951320807046*^9, {3.732087425864501*^9, 
   3.7320874259735527`*^9}},
 ExpressionUUID -> "543e787b-2ea7-4f27-bb66-b208ac860508"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.7319276145195684`*^9, 3.731927650681192*^9}, {
   3.7319276827311273`*^9, 3.7319279205871563`*^9}, {3.7319279564573264`*^9, 
   3.731928082940116*^9}, {3.7319281604406195`*^9, 3.731928180925288*^9}, {
   3.7319282251414375`*^9, 3.731928309668589*^9}, {3.7319283579865007`*^9, 
   3.7319283669397607`*^9}, 3.731929627842016*^9, 3.7319297351289954`*^9, 
   3.7319300204232087`*^9, {3.7319300539063797`*^9, 3.7319300801834426`*^9}, {
   3.731930115992984*^9, 3.7319301402430725`*^9}, 3.7319301824193325`*^9, 
   3.731930215505908*^9, 3.731930276917201*^9, 3.731930411163001*^9, 
   3.731930537238201*^9, 3.731930580568565*^9, 3.7319376473622446`*^9, 
   3.731937768441244*^9, 3.7319508501486464`*^9, 3.731951051469246*^9, 
   3.731951126780246*^9, {3.731951159437446*^9, 3.731951162690646*^9}, 
   3.731951200742846*^9, 3.731951235035246*^9, {3.731951303149446*^9, 
   3.731951321602646*^9}, 3.7320865116238556`*^9, 3.732086825104733*^9, 
   3.7320874264537916`*^9, 3.7320874979956083`*^9, {3.7320878755161457`*^9, 
   3.732087899921363*^9}, 3.732088034911947*^9, 3.7320882085700884`*^9, {
   3.7320883080348845`*^9, 3.7320883319048347`*^9}, 3.7320884405662355`*^9, 
   3.7320885535578156`*^9, 3.7320886028454776`*^9, {3.732088632988575*^9, 
   3.7320886658115487`*^9}, {3.7320887201659737`*^9, 
   3.7320887305971966`*^9}, {3.7320887918178453`*^9, 3.7320888204761944`*^9}, 
   3.7320888837388773`*^9, 3.7320889328424625`*^9, {3.7320889651276116`*^9, 
   3.732088991942048*^9}, 3.7320893354900284`*^9, 3.7320894231769295`*^9, 
   3.7320894561564426`*^9, 3.732089499785282*^9, 3.732089767898511*^9, 
   3.732089910054678*^9, 3.732090126057273*^9, 3.7320903915912113`*^9, 
   3.7320904407388153`*^9, {3.7320905119604726`*^9, 3.7320905560525475`*^9}, {
   3.732090965068327*^9, 3.7320909899677896`*^9}, 3.7320910683980455`*^9, {
   3.7320910991314316`*^9, 3.7320911226912355`*^9}, {3.732091159681747*^9, 
   3.7320911839859133`*^9}, 3.7320912676678085`*^9, 3.732091359838953*^9, 
   3.732091524810543*^9, 3.732091643088758*^9},
 ExpressionUUID -> "9d4bf252-f8b9-4b5e-92c3-0391520aa089"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$PhaseResolution", "=", "0.001"}], ";"}]], "Input",
 CellChangeTimes->{{3.7319512209920464`*^9, 3.731951225797846*^9}, {
  3.731951327788246*^9, 3.731951356652646*^9}, {3.7320874285418377`*^9, 
  3.7320874286859093`*^9}},
 ExpressionUUID -> "6ceeeba4-73fa-42e5-95f1-f725c0af2df6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Badd", "=", "0.2"}]], "Input",
 CellChangeTimes->{{3.732091436385275*^9, 3.732091459994095*^9}, {
   3.732091496571409*^9, 3.732091531556929*^9}, 3.732091612502446*^9}],

Cell[BoxData["0.2`"], "Output",
 CellChangeTimes->{{3.7320914376188917`*^9, 3.732091460389292*^9}, {
   3.7320914970406528`*^9, 3.7320915317780313`*^9}, 3.732091577647008*^9, 
   3.7320916127945924`*^9, 3.7320916431107693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"phase", "=", 
   RowBox[{"rfamplitude", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", "6", "}"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"crest", "=", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "360"}], "}"}], ",", 
     RowBox[{"{", "6", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DoOptimisation", "[", 
    RowBox[{"phase", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "6", "]"}]}]}], "Input",
 CellChangeTimes->{{3.7320868275899773`*^9, 3.7320868416170216`*^9}, {
   3.7320874329820595`*^9, 3.7320874385828753`*^9}, {3.7320874903507805`*^9, 
   3.732087494269743*^9}, {3.732089107744011*^9, 3.732089120591443*^9}, {
   3.7320891561442537`*^9, 3.7320891896810327`*^9}, {3.7320892841593313`*^9, 
   3.7320892936670933`*^9}, 3.732089441297001*^9, 3.7320894976101933`*^9, {
   3.7320897753842573`*^9, 3.7320897973762674`*^9}, {3.7320899275624447`*^9, 
   3.7320899312562923`*^9}, {3.732090394182514*^9, 3.7320904094431505`*^9}, 
   3.732091247186555*^9},
 ExpressionUUID -> "5876fdd6-c864-4175-9c73-e23a9a85702c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.047603136159685`"}], ",", "0.7749841938355981`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8759104335130417`"}], ",", 
     RowBox[{"-", "0.0018495455583718012`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.23205523098135927`"}], ",", "0.018770409906096575`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45263882345039974`", ",", 
     RowBox[{"-", "0.1779416265781606`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.7342738590087095`", ",", "0.08044472434195171`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.7641575419598325`"}], ",", 
     RowBox[{"-", "0.1854583199203148`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.731930220950238*^9, 3.7319302389902077`*^9}, 
   3.731930277026401*^9, 3.731930411287801*^9, 3.731930537331801*^9, 
   3.7319305820817747`*^9, 3.7319376478166447`*^9, {3.7319377688644447`*^9, 
   3.7319377728278446`*^9}, 3.731950850304646*^9, 3.731951051562846*^9, 
   3.731951126858246*^9, {3.731951159531046*^9, 3.7319511632054462`*^9}, {
   3.731951200806246*^9, 3.731951235768446*^9}, {3.731951303258646*^9, 
   3.731951357419046*^9}, 3.731951917637246*^9, 3.7320865121391125`*^9, {
   3.7320868330217085`*^9, 3.732086842087247*^9}, 3.7320874496934257`*^9, 
   3.7320875002057147`*^9, {3.7320878542734966`*^9, 3.732087901701242*^9}, 
   3.7320880399594584`*^9, 3.7320881783569627`*^9, 3.7320882086721396`*^9, {
   3.732088308124929*^9, 3.7320883809143705`*^9}, 3.7320884406382704`*^9, {
   3.7320885113806868`*^9, 3.7320885536418447`*^9}, {3.732088602935522*^9, 
   3.7320886659296074`*^9}, {3.732088720183983*^9, 3.732088730740285*^9}, {
   3.7320887919589167`*^9, 3.732088845601777*^9}, {3.732088883856923*^9, 
   3.732088932951503*^9}, {3.7320889652306633`*^9, 3.732088992043086*^9}, 
   3.7320890384783325`*^9, 3.7320890717109723`*^9, {3.732089116694491*^9, 
   3.7320891906535196`*^9}, {3.732089284777642*^9, 3.7320892956100626`*^9}, 
   3.7320893358762236`*^9, {3.7320894323595257`*^9, 3.7320894561784506`*^9}, 
   3.732089499806293*^9, 3.73208955289487*^9, 3.7320896308428936`*^9, {
   3.732089767916518*^9, 3.7320897976494164`*^9}, {3.7320898899015894`*^9, 
   3.73208993173053*^9}, 3.732090126077285*^9, 3.732090242931786*^9, 
   3.7320903152239776`*^9, {3.7320903916112213`*^9, 3.732090409705291*^9}, 
   3.7320904407598267`*^9, {3.7320905119784927`*^9, 3.7320905560765696`*^9}, {
   3.7320906575623665`*^9, 3.7320906724418154`*^9}, {3.7320909650903378`*^9, 
   3.7320909899867907`*^9}, 3.7320910684160542`*^9, {3.7320910991514425`*^9, 
   3.732091184004923*^9}, {3.732091248823373*^9, 3.73209126809302*^9}, 
   3.732091360224145*^9, {3.7320914390476065`*^9, 3.732091461458827*^9}, {
   3.732091498157199*^9, 3.732091532518402*^9}, {3.7320915780491962`*^9, 
   3.7320916435269785`*^9}},
 ExpressionUUID -> "3be1e6b2-1df2-4a56-a1ee-f5c7b805fe71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"B", "\[IndentingNewLine]", 
 RowBox[{"crest", "-", "phase"}]}], "Input",
 CellChangeTimes->{{3.732090454993955*^9, 3.732090460913921*^9}}],

Cell[BoxData["1.6299999999999797`"], "Output",
 CellChangeTimes->{{3.7320904552490797`*^9, 3.7320904614491835`*^9}, {
  3.7320905338434258`*^9, 3.732090539698371*^9}, {3.7320910995796556`*^9, 
  3.7320911443760843`*^9}, {3.7320912511015153`*^9, 3.7320912681060343`*^9}, {
  3.732091591078732*^9, 3.732091643537982*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7749841938355981`", ",", 
   RowBox[{"-", "0.0018495455583718012`"}], ",", "0.018770409906096575`", ",", 
   RowBox[{"-", "0.1779416265781606`"}], ",", "0.08044472434195171`", ",", 
   RowBox[{"-", "0.1854583199203148`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7320904552490797`*^9, 3.7320904614491835`*^9}, {
  3.7320905338434258`*^9, 3.732090539698371*^9}, {3.7320910995796556`*^9, 
  3.7320911443760843`*^9}, {3.7320912511015153`*^9, 3.7320912681060343`*^9}, {
  3.732091591078732*^9, 3.7320916435439863`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"testdata", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"phase", "=", 
       RowBox[{"rfamplitude", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", "6", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"crest", "=", 
       RowBox[{"RandomReal", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "360"}], "}"}], ",", 
         RowBox[{"{", "6", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"DoOptimisation", "[", 
         RowBox[{"phase", ",", "#"}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", "6", "]"}]}]}], ",", 
     RowBox[{"{", "50", "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.7319134828652864`*^9, {3.7319283354811554`*^9, 3.73192834706043*^9}, {
   3.731930148013773*^9, 3.7319301584344397`*^9}, 3.7319303189918013`*^9, {
   3.7319304218022013`*^9, 3.731930421895801*^9}, {3.731930568835289*^9, 
   3.7319305691784916`*^9}, {3.731950875187846*^9, 3.731950875281446*^9}, {
   3.731950935863446*^9, 3.7319509365966463`*^9}, {3.731951044627446*^9, 
   3.7319510450018463`*^9}, {3.731951385649846*^9, 3.731951386149046*^9}, {
   3.7320912061760263`*^9, 3.732091246521225*^9}, 3.732091304298147*^9},
 ExpressionUUID -> "19b29fb1-ba01-41e3-9b59-0614548759f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"testdata", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", "3", ",", "0.1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", "Automatic"}], "}"}]}], 
   ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Max\>\"", ",", "\"\<Fit\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7319301666399345`*^9, 3.731930170260088*^9}, {
   3.731930256310001*^9, 3.731930258431601*^9}, {3.731930444617401*^9, 
   3.7319304465986013`*^9}, {3.7319305474104013`*^9, 3.731930561951645*^9}, {
   3.7319374341022444`*^9, 3.7319374412802444`*^9}, {3.7319377288784447`*^9, 
   3.7319377301888447`*^9}, {3.7319377813842444`*^9, 
   3.7319377817898445`*^9}, {3.7319378230868444`*^9, 
   3.7319378823498445`*^9}, {3.731950889750646*^9, 3.731950889781846*^9}, {
   3.7319509200582457`*^9, 3.731950928761446*^9}, 3.7319510337492456`*^9, 
   3.73209128352975*^9},
 ExpressionUUID -> "8b6041ad-3c10-4c58-ba60-d2fe64a656ff"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Directive[
       EdgeForm[
        Directive[
         Thickness[Small], 
         Opacity[0.26599999999999996`]]], 
       RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], {{{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.26599999999999996`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.97858, 0.678934, 0.157834]]], {{{
             RectangleBox[{-2.5, 0.}, {-2.4, 1}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2.2, 0.}, {-2.1, 2}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2.1, 0.}, {-2., 3}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-2., 0.}, {-1.9, 1}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.7999999999999998`, 0.}, {-1.7, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.7, 0.}, {-1.5999999999999999`, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.5999999999999999`, 0.}, {-1.5, 4}, 
              "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-1.5, 0.}, {-1.4, 6}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.4, 0.}, {-1.2999999999999998`, 5}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.2999999999999998`, 0.}, {-1.2, 2}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.2, 0.}, {-1.0999999999999999`, 7}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1.0999999999999999`, 0.}, {-1., 18}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-1., 0.}, {-0.8999999999999999, 11}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.8999999999999999, 
              0.}, {-0.7999999999999998, 29}, "RoundingRadius" -> 0]}}, {{
             RectangleBox[{-0.7999999999999998, 
              0.}, {-0.6999999999999997, 17}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.6999999999999997, 
              0.}, {-0.5999999999999996, 17}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.5999999999999996, 0.}, {-0.5, 24}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.5, 0.}, {-0.3999999999999999, 14}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.3999999999999999, 
              0.}, {-0.2999999999999998, 19}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.2999999999999998, 
              0.}, {-0.19999999999999973`, 15}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.19999999999999973`, 
              0.}, {-0.09999999999999964, 9}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.09999999999999964, 0.}, {0., 9}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0., 0.}, {0.10000000000000009`, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.10000000000000009`, 0.}, {
              0.20000000000000018`, 5}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.20000000000000018`, 0.}, {
              0.30000000000000027`, 4}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.30000000000000027`, 0.}, {
              0.40000000000000036`, 4}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.40000000000000036`, 0.}, {0.5, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.5, 0.}, {0.6000000000000001, 10}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.6000000000000001, 0.}, {0.7000000000000002, 7}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.7000000000000002, 0.}, {0.8000000000000003, 10}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.8000000000000003, 0.}, {0.9000000000000004, 4}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.9000000000000004, 0.}, {1., 1}, "RoundingRadius" -> 
              0]}}, {{
             RectangleBox[{1., 0.}, {1.1000000000000005`, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.1000000000000005`, 0.}, {1.2000000000000002`, 3},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.2000000000000002`, 0.}, {1.2999999999999998`, 6},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.2999999999999998`, 0.}, {1.4000000000000004`, 5},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.4000000000000004`, 0.}, {1.5, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.5, 0.}, {1.6000000000000005`, 1}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.6000000000000005`, 0.}, {1.7000000000000002`, 4},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.7000000000000002`, 0.}, {1.8000000000000007`, 3},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{1.8000000000000007`, 0.}, {1.9000000000000004`, 1},
               "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{2.8000000000000007`, 0.}, {2.9000000000000004`, 2},
               "RoundingRadius" -> 0]}}}}, {}, {}}}, {{{}, {
          Directive[
           Opacity[0.5], 
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.26599999999999996`]]], 
            RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`]], 
           Directive[
            RGBColor[0.368417, 0.506779, 0.709798]]], {{{
             
             RectangleBox[{-0.2999999999999998, 
              0.}, {-0.19999999999999973`, 5}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.19999999999999973`, 
              0.}, {-0.09999999999999964, 47}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{-0.09999999999999964, 0.}, {0., 115}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0., 0.}, {0.10000000000000009`, 83}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.10000000000000009`, 0.}, {
              0.20000000000000018`, 25}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.20000000000000018`, 0.}, {
              0.30000000000000027`, 7}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.30000000000000027`, 0.}, {
              0.40000000000000036`, 2}, "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.6000000000000001, 0.}, {0.7000000000000002, 3}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.7000000000000002, 0.}, {0.8000000000000003, 6}, 
              "RoundingRadius" -> 0]}}, {{
             
             RectangleBox[{0.8000000000000003, 0.}, {0.9000000000000004, 7}, 
              "RoundingRadius" -> 
              0]}}}}, {}, {}}}}}, {{{{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {}}}, {{{{}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}}, {}}}}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-3.12, 0.}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{-3, 3}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Max\"", "\"Fit\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.26599999999999996`]]], 
                    RGBColor[0.97858, 0.678934, 0.157834]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Opacity[0.5], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.26599999999999996`]]], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.97858, 0.678934, 0.157834], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6523866666666667, 0.45262266666666673`, 
                    0.10522266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.97858, 0.678934, 0.157834]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.97858, 0.678934, 0.157834]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.97858, 0.678934, 0.157834], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.26599999999999996`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", "None", "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.73193017086848*^9, 3.7319301879728613`*^9}, {
   3.7319302538140182`*^9, 3.731930288188401*^9}, 3.731930319834201*^9, 
   3.731930369778801*^9, {3.731930411459401*^9, 3.731930447191401*^9}, {
   3.731930539765401*^9, 3.7319305625912485`*^9}, 3.731930618486614*^9, {
   3.7319374374094443`*^9, 3.731937443248844*^9}, 3.7319376854870443`*^9, 
   3.7319377419480443`*^9, 3.7319377834746447`*^9, {3.7319378194052444`*^9, 
   3.7319378862820444`*^9}, 3.731950884756646*^9, {3.731950923555646*^9, 
   3.7319509291046457`*^9}, {3.7319510082036457`*^9, 3.731951059855446*^9}, 
   3.7319511337710457`*^9, 3.731951212173046*^9, 3.7319512499920464`*^9, {
   3.731951314778446*^9, 3.731951366040246*^9}, 3.731951430851246*^9, 
   3.732086547654894*^9, 3.7320912998669405`*^9, 3.7320913312976694`*^9, 
   3.7320913940150795`*^9, {3.7320916086175013`*^9, 3.7320916325784955`*^9}, 
   3.732091662766609*^9},
 ExpressionUUID -> "653fa5f1-6bb9-4bfd-abf6-54a06cb3ad55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bpmReadings", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1", ",", "6"}], "]"}], "]"}], ",", 
     RowBox[{"bpmReadings", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7319111997872863`*^9, 3.7319112335372863`*^9}, 
   3.7319123940392866`*^9, 3.7319132410212865`*^9, {3.7320878287347116`*^9, 
   3.7320878303355336`*^9}, 3.7320890951457043`*^9, 3.7320894670959167`*^9, 
   3.732090001486453*^9, 3.7320904182525606`*^9},
 ExpressionUUID -> "a6a1584a-998f-40ab-959a-fd8873e4406e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEcDq9Mt1snn3lkD+FLOMi97mTprbkI5Ss5rDp1
M17g0YH9EL6Gw8Npsc/Dqx9B+XoOVafn7HLw/Lh/DfOyN+cvqDrUJhWEsbDe
3L+r6K2/6Wophxssh2XepZ20n5az3SGAn9nhb9hvzWnBT+xNNATDbyf+2n+7
edFp4XNv7K/FsUnO2yV64JFg2oTPJz/Yp/TPfz0jWvHAV+F2ro9xH+35Kvf/
vzRP7cCXVlauWz8/2CuVHc0Sqtc6wHRZlnG61wf7Z2+WzGBZr3MgcvOTAs5J
76F8vQNdLYy60u/f2u+XY3ow7ZPBgdLCmc3261/bN+hFZKT+NzpgZzXt24mg
F/Y5v+WU/MNMD1isOsr0XfyR/cSjAS1Mf80P/OpyEGwzv2TvUqrDr/vX6kBl
9yc2F5ed+wE+1JEj
      "]]}, {}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-26.988968799928685`, 15.}, {-1.0803839959669106`, 
   1.0856790934787999`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7319249725493245`*^9, {3.73192512915592*^9, 3.731925146491679*^9}, 
   3.731925516062375*^9, 3.7319255846512175`*^9, 3.7319256439679813`*^9, 
   3.731925674039482*^9, 3.7319260062465*^9, 3.731926059390909*^9, 
   3.7319261756614847`*^9, 3.7319262592230635`*^9, 3.7319264808829007`*^9, {
   3.73192655230908*^9, 3.731926575285053*^9}, {3.731926821265326*^9, 
   3.73192684102118*^9}, {3.7319269845113287`*^9, 3.731926987007393*^9}, {
   3.731927103651386*^9, 3.731927155251113*^9}, {3.7319271890805893`*^9, 
   3.73192721248619*^9}, 3.7319272614134455`*^9, 3.7319273917009916`*^9, 
   3.731927465741304*^9, {3.7319275370685363`*^9, 3.7319275595567136`*^9}, {
   3.731927605158084*^9, 3.73192765083718*^9}, {3.7319276828871155`*^9, 
   3.7319279206807556`*^9}, {3.731927956535326*^9, 3.731928033664632*^9}, {
   3.731928076822955*^9, 3.731928083018115*^9}, {3.731928160549819*^9, 
   3.7319281810032883`*^9}, {3.7319282636452875`*^9, 3.7319283110277977`*^9}, 
   3.7319283597649117`*^9, 3.731929634846551*^9, 3.7319296899156733`*^9, 
   3.7319300244011574`*^9, {3.731930128849219*^9, 3.7319301412882595`*^9}, {
   3.731930288250801*^9, 3.731930321222601*^9}, 3.731930373210801*^9, {
   3.7319304133158007`*^9, 3.731930426484201*^9}, 3.7319306365983305`*^9, 
   3.731950855050046*^9, 3.731951010699646*^9, 3.7319510746376457`*^9, 
   3.731951133833446*^9, 3.731951212204246*^9, {3.731951314795046*^9, 
   3.731951343741446*^9}, 3.731951436407846*^9, 3.732086547705919*^9, 
   3.7320875076544604`*^9, 3.732087575997181*^9, 3.732087659030752*^9, {
   3.7320878268447666`*^9, 3.732087830691704*^9}, 3.732087882046414*^9, 
   3.732088045410201*^9, 3.7320881522578993`*^9, {3.732088310534136*^9, 
   3.7320883172655053`*^9}, 3.732088383723789*^9, 3.7320884459219284`*^9, {
   3.7320885164762383`*^9, 3.7320885355427837`*^9}, {3.7320890906154356`*^9, 
   3.7320890958170395`*^9}, 3.7320894675321465`*^9, 3.7320900019376907`*^9, 
   3.7320901814290113`*^9, 3.732090348068421*^9, {3.732090399289076*^9, 
   3.7320904432440815`*^9}, {3.7320905148259153`*^9, 3.732090558471758*^9}, 
   3.7320906763007593`*^9, 3.732090993218421*^9, 3.7320910717127047`*^9, {
   3.7320911031324368`*^9, 3.7320911253835745`*^9}, 3.732091187541706*^9, 
   3.7320913655488105`*^9, {3.7320914756859508`*^9, 3.732091536200258*^9}},
 ExpressionUUID -> "9959224e-faae-4f4b-92bf-4e2c4247c7df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "bpmReadings", "]"}]], "Input",
 CellChangeTimes->{{3.7319276612415795`*^9, 3.731927665406459*^9}},
 ExpressionUUID -> "d6d61ccd-1c5b-40ea-85d3-ed41fe449bf5"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.7319276658588247`*^9, 3.7319277211099777`*^9}, 
   3.731927770412755*^9, {3.7319279144387956`*^9, 3.7319279230207405`*^9}, 
   3.7319281861688547`*^9, {3.731928269791727*^9, 3.731928312543008*^9}, {
   3.731930295770001*^9, 3.731930322283401*^9}, 3.731930377959201*^9, 
   3.731930427482601*^9, 3.731930636660731*^9, 3.731950858483046*^9, 
   3.7319510132464457`*^9, 3.731951133864646*^9, 3.731951212235446*^9, 
   3.7319513148262463`*^9, 3.731951346502646*^9, 3.731951436454646*^9, 
   3.732086547730932*^9, 3.732088070576787*^9, 3.732088152312924*^9, 
   3.7320883974636564`*^9, 3.732090561379213*^9, 3.73209067978249*^9, 
   3.7320910011173635`*^9, {3.732091075290512*^9, 3.732091128055914*^9}, 
   3.732091366870476*^9, 3.732091545044674*^9},
 ExpressionUUID -> "5f060156-3216-48da-9336-fea1a192507f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"(", 
  RowBox[{"fitans", "=", 
   RowBox[{"FindFit", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bpmReadings", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1", ",", "n"}], "]"}], "]"}], ",", 
        RowBox[{"bpmReadings", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"fiteq", "=", 
        RowBox[{"a", "+", 
         RowBox[{"b", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"\[Phi]", "-", "x"}], ")"}], " ", "Degree"}], 
           "]"}]}]}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"guesscrest", "-", "20"}], ")"}], "<", "\[Phi]", "<", 
        RowBox[{"(", 
         RowBox[{"guesscrest", "+", "20"}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", 
         RowBox[{"(", "guesscrest", ")"}]}], "}"}]}], "}"}], ",", "x"}], 
    "]"}]}], ")"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBmIQbbX62j+Rc68dPUy+sYgCaRfOKC4Q3VAxFUwL73cU
BdHzPKdKg+iFh2brgugPdYoGIPpvV7oTiBZbr+wKopUMT3iB6M3/NXxAtB2P
qLwYkH70uUsVRP+3PVoAoj0OnQPTPFUi3eJA+tAXDzC9YRvTDBB9w4QdTLe/
vjsbRLcGOs4H0ZuYX68H0QmaxzeA6AuNJq8UgfTBkGNfQfSZimfqSkD6ou0i
bRCdYMK5MAVIz2pftBhEC641vZUKpLMSv4FpM5nH70H0NOsXYHrBiS+fQfS3
gLlfQXRTyVq2NCB9bcYPDhANAEOcn+w=
  "],
 ExpressionUUID -> "62f3636f-eb75-4213-abe1-765c5632c216"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", 
    RowBox[{"-", "23.717280752295668`"}]}], ",", 
   RowBox[{"b", "\[Rule]", "24.82279378272564`"}], ",", 
   RowBox[{"\[Phi]", "\[Rule]", "350.90999500056733`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.731925022537306*^9, 3.731925032128099*^9}, 
   3.7319250772640553`*^9, {3.731925130653741*^9, 3.731925213336136*^9}, 
   3.73192537829033*^9, {3.731925516124776*^9, 3.7319255470510354`*^9}, {
   3.731925584713667*^9, 3.7319256049344683`*^9}, {3.7319256474807262`*^9, 
   3.7319256741956043`*^9}, 3.7319260066366177`*^9, 3.731926059703003*^9, 
   3.7319261758487077`*^9, 3.731926259503897*^9, 3.731926315850977*^9, 
   3.731926519993409*^9, {3.7319265524338884`*^9, 3.731926575347456*^9}, {
   3.731926824946973*^9, 3.7319268410679803`*^9}, 3.7319269870697947`*^9, {
   3.7319271058354416`*^9, 3.7319271553135147`*^9}, {3.7319271900322137`*^9, 
   3.7319272136406193`*^9}, {3.7319272663607726`*^9, 3.7319273411066904`*^9}, 
   3.731927395491889*^9, 3.731927477157198*^9, {3.731927537130938*^9, 
   3.731927566327287*^9}, {3.7319276052204857`*^9, 3.731927650899575*^9}, {
   3.731927682965109*^9, 3.7319277101814165`*^9}, {3.731927914501195*^9, 
   3.731927943070612*^9}, 3.7319281862312546`*^9, {3.731928270524932*^9, 
   3.731928313229412*^9}, 3.7319302029038696`*^9, {3.7319302964408007`*^9, 
   3.7319303780216007`*^9}, {3.731930428013001*^9, 3.731930437404201*^9}, {
   3.731930495703001*^9, 3.731930503206601*^9}, 3.731930636707531*^9, 
   3.731950860043046*^9, 3.731951015293046*^9, 3.731951133927046*^9, 
   3.731951212282246*^9, 3.7319513149042463`*^9, 3.731951346549446*^9, {
   3.731951436502446*^9, 3.731951534463046*^9}, {3.731951921961446*^9, 
   3.7319519653040457`*^9}, 3.7320865477849584`*^9, {3.732088072790896*^9, 
   3.732088093707368*^9}, 3.7320881523569508`*^9, 3.7320883975076776`*^9, {
   3.7320905614212337`*^9, 3.732090605772438*^9}, 3.732090679870534*^9, 
   3.7320907520726805`*^9, {3.7320907848650985`*^9, 3.7320907983028383`*^9}, 
   3.732090878841146*^9, {3.7320909148641796`*^9, 3.7320909526030903`*^9}, 
   3.7320910029112673`*^9, 3.7320910753525267`*^9, {3.73209111227001*^9, 
   3.732091130932352*^9}, 3.732091367766922*^9, 3.7320915451077228`*^9},
 ExpressionUUID -> "7bb9a104-5c23-411f-9f9a-277c49098ca9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"fiteq", "/.", "fitans"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{
        RowBox[{"crest", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "-", "40"}], ",", 
       RowBox[{
        RowBox[{"crest", "[", 
         RowBox[{"[", "n", "]"}], "]"}], "+", "40"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"bpmReadings", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1", ",", "n"}], "]"}], "]"}], ",", "360"}], 
        "]"}], ",", 
       RowBox[{"bpmReadings", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.731925032960515*^9, 3.7319251017266808`*^9}, {
  3.7319272973199673`*^9, 3.7319273032677197`*^9}, {3.731930485278201*^9, 
  3.731930526125001*^9}, {3.7320881066548495`*^9, 3.7320881318797235`*^9}, {
  3.7320905984667845`*^9, 3.732090634001571*^9}, {3.732090687834523*^9, 
  3.732090690925068*^9}, {3.7320908721247864`*^9, 3.73209087377061*^9}},
 ExpressionUUID -> "337f5508-44c6-4bfd-a6fe-6ede179d1cec"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$136909#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEcDq9Mt1snn3lkD+FLOMi97mTprbkI5Ss5rDp1
M17g0YH9EL6Gw8Npsc/Dqx9B+XoOVafn7HLw/Lh/DfOyN+cvqDrUJhWEsbDe
3L+r6K2/6Wophxssh2XepZ20n5az3SGAn9nhb9hvzWnBT+xvvFuhMi+1zOF2
86LTwufe2Lc+m90uqlnm8EgwbcLnkx/sW5kXWyh/LXX4KtzO9THuo70FC1MG
5+lShy+trFy3fn6w97+yMod9TakD02VZxuleH+xn3rC63T6r1CFy85MCzknv
IfyuUoeuFkZd6fdv7UXu/Z94raDUobRwZrP9+tf2ErVVKzkDSh3srKZ9OxH0
wt5T4B7vbK1SB4tVR5m+iz+yX/5513V9hlKHX10Ogm3ml+zXWPDq614ocajs
/sTm4rJzPwBesoxA
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{311.0279107397266, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.73192503709258*^9, 3.731925198028279*^9}, 
   3.731925380303026*^9, {3.731925516171577*^9, 3.7319255471290965`*^9}, {
   3.7319255847605033`*^9, 3.731925605012529*^9}, {3.7319256475431747`*^9, 
   3.731925674258053*^9}, 3.731926006699036*^9, 3.731926059765422*^9, 
   3.731926175926717*^9, 3.7319262595663047`*^9, 3.731926315944588*^9, 
   3.731926520087015*^9, {3.731926552496292*^9, 3.7319265753942585`*^9}, {
   3.7319268249937735`*^9, 3.7319268437980156`*^9}, 3.7319269871165953`*^9, {
   3.731927106459458*^9, 3.731927155360316*^9}, {3.731927191186643*^9, 
   3.731927217369115*^9}, {3.731927290968604*^9, 3.731927341434299*^9}, 
   3.731927396006702*^9, 3.731927537177739*^9, 3.731927569977781*^9, {
   3.731927605267287*^9, 3.7319276509619703`*^9}, {3.7319276830119057`*^9, 
   3.731927710228213*^9}, {3.731927914547995*^9, 3.7319279440846057`*^9}, 
   3.731928186278054*^9, {3.731928271039735*^9, 3.7319283137598157`*^9}, {
   3.7319302971740007`*^9, 3.7319303780684013`*^9}, 3.731930429073801*^9, {
   3.7319304689420013`*^9, 3.731930526312201*^9}, 3.73193063961115*^9, 
   3.731950861677846*^9, 3.731951016385046*^9, 3.731951133990446*^9, 
   3.731951212344646*^9, 3.731951314951046*^9, 3.731951346611846*^9, {
   3.731951436564846*^9, 3.731951731800846*^9}, {3.731951771331046*^9, 
   3.731951966319046*^9}, 3.732086547873002*^9, {3.732088107896471*^9, 
   3.732088152417976*^9}, 3.7320883975637074`*^9, 3.7320905614802628`*^9, {
   3.7320905921386127`*^9, 3.732090599284201*^9}, 3.7320906348660145`*^9, {
   3.732090685485346*^9, 3.7320906915413775`*^9}, 3.732090755352332*^9, {
   3.732090851999708*^9, 3.732090880938197*^9}, 3.732090916986255*^9, 
   3.7320909552363935`*^9, 3.7320910073444796`*^9, 3.732091075406554*^9, {
   3.732091112344048*^9, 3.732091131005389*^9}, 3.732091368375243*^9, 
   3.732091545148725*^9},
 ExpressionUUID -> "94c95b5a-95af-46fb-89a3-d2fc93157ac8"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1452, 684},
WindowMargins->{{Automatic, -1745}, {142, Automatic}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 924, 20, 27, "Input"],
Cell[1485, 42, 1853, 45, 46, "Input"],
Cell[CellGroupData[{
Cell[3363, 91, 375, 8, 27, "Input"],
Cell[3741, 101, 822, 11, 29, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4600, 117, 321, 7, 27, "Input"],
Cell[4924, 126, 730, 11, 27, "Output"]
}, Open  ]],
Cell[5669, 140, 657, 15, 27, "Input"],
Cell[6329, 157, 637, 14, 50, "Input"],
Cell[6969, 173, 667, 15, 27, "Input"],
Cell[7639, 190, 1927, 48, 96, "Input"],
Cell[CellGroupData[{
Cell[9591, 242, 178, 4, 33, "Input"],
Cell[9772, 248, 109, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9918, 254, 155, 3, 55, "Section"],
Cell[10076, 259, 212, 4, 27, "Input"],
Cell[CellGroupData[{
Cell[10313, 267, 241, 4, 27, "Input"],
Cell[10557, 273, 257, 4, 27, "Output"]
}, Open  ]],
Cell[10829, 280, 205, 4, 27, "Input"],
Cell[11037, 286, 202, 4, 27, "Input"],
Cell[11242, 292, 309, 7, 29, "Input"],
Cell[11554, 301, 237, 5, 27, "Input"],
Cell[11794, 308, 280, 5, 27, "Input"],
Cell[12077, 315, 228, 5, 27, "Input"],
Cell[12308, 322, 257, 6, 29, "Input"],
Cell[CellGroupData[{
Cell[12590, 332, 298, 7, 27, "Input"],
Cell[12891, 341, 35462, 592, 196, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48390, 938, 644, 14, 33, "Input"],
Cell[49037, 954, 4273, 81, 202, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53347, 1040, 252, 5, 27, "Input"],
Cell[53602, 1047, 990, 13, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54629, 1065, 721, 14, 27, "Input"],
Cell[55353, 1081, 5000, 95, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60390, 1181, 1075, 19, 27, "Input"],
Cell[61468, 1202, 61263, 1016, 217, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[122780, 2224, 217, 3, 55, "Section"],
Cell[123000, 2229, 1379, 30, 181, "Input"],
Cell[CellGroupData[{
Cell[124404, 2263, 158, 2, 27, "Input"],
Cell[124565, 2267, 454, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125056, 2279, 124, 2, 27, "Input"],
Cell[125183, 2283, 474, 7, 27, "Output"]
}, Open  ]],
Cell[125672, 2293, 1868, 41, 250, "Input"],
Cell[127543, 2336, 592, 16, 27, "Input"],
Cell[128138, 2354, 2879, 60, 285, "Input"],
Cell[131020, 2416, 5540, 126, 375, "Input"],
Cell[CellGroupData[{
Cell[136585, 2546, 241, 4, 27, "Input"],
Cell[136829, 2552, 978, 14, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137844, 2571, 389, 6, 27, "Input"],
Cell[138236, 2579, 1023, 14, 27, "Output"]
}, Open  ]],
Cell[139274, 2596, 260, 5, 27, "Input"],
Cell[CellGroupData[{
Cell[139559, 2605, 303, 7, 45, "Input"],
Cell[139865, 2614, 680, 11, 27, "Output"]
}, Open  ]],
Cell[140560, 2628, 936, 20, 45, "Input"],
Cell[CellGroupData[{
Cell[141521, 2652, 1138, 25, 27, "Input"],
Cell[142662, 2679, 165937, 3177, 218, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[308636, 5861, 252, 4, 27, "Input"],
Cell[308891, 5867, 4467, 83, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[313395, 5955, 505, 13, 27, "Input"],
Cell[313903, 5970, 973, 14, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314913, 5989, 196, 3, 27, "Input"],
Cell[315112, 5994, 620, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[315769, 6008, 1461, 31, 30, "Input"],
Cell[317233, 6041, 1839, 28, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319109, 6074, 158, 2, 27, "Input"],
Cell[319270, 6078, 512, 8, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319819, 6091, 629, 15, 27, "Input"],
Cell[320451, 6108, 9852, 172, 210, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[330352, 6286, 217, 3, 43, "Section"],
Cell[330572, 6291, 160, 3, 27, "Input"],
Cell[330735, 6296, 1677, 36, 154, "Input"],
Cell[CellGroupData[{
Cell[332437, 6336, 99, 1, 27, "Input"],
Cell[332539, 6339, 144, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332720, 6346, 99, 1, 27, "Input"],
Cell[332822, 6349, 122, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332981, 6356, 68, 1, 27, "Input"],
Cell[333052, 6359, 117, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333206, 6366, 279, 7, 27, "Input"],
Cell[333488, 6375, 496, 9, 19, "Message"],
Cell[333987, 6386, 628, 12, 19, "Message"],
Cell[334618, 6400, 4399, 99, 204, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339054, 6504, 105, 1, 27, "Input"],
Cell[339162, 6507, 128, 2, 27, "Output"]
}, Open  ]],
Cell[339305, 6512, 1859, 41, 244, "Input"],
Cell[341167, 6555, 149, 3, 27, "Input"],
Cell[341319, 6560, 996, 27, 27, "Input"],
Cell[342318, 6589, 3139, 67, 298, "Input"],
Cell[345460, 6658, 9521, 217, 725, "Input"],
Cell[CellGroupData[{
Cell[355006, 6879, 526, 15, 27, "Input"],
Cell[355535, 6896, 735, 10, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[356307, 6911, 73, 1, 27, "Input"],
Cell[356383, 6914, 1389, 22, 27, "Output"]
}, Open  ]],
Cell[357787, 6939, 229, 6, 27, "Input"],
Cell[CellGroupData[{
Cell[358041, 6949, 266, 4, 27, "Input"],
Cell[358310, 6955, 2079, 29, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360426, 6989, 441, 7, 27, "Input"],
Cell[360870, 6998, 2131, 29, 27, "Output"]
}, Open  ]],
Cell[363016, 7030, 315, 6, 27, "Input"],
Cell[CellGroupData[{
Cell[363356, 7040, 192, 3, 27, "Input"],
Cell[363551, 7045, 227, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363815, 7053, 1199, 27, 64, "Input"],
Cell[365017, 7082, 2968, 53, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[368022, 7140, 153, 2, 46, "Input"],
Cell[368178, 7144, 319, 4, 27, "Output"],
Cell[368500, 7150, 559, 9, 27, "Output"]
}, Open  ]],
Cell[369074, 7162, 1399, 31, 82, "Input"],
Cell[CellGroupData[{
Cell[370498, 7197, 1225, 28, 27, "Input"],
Cell[371726, 7227, 159885, 3051, 220, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531648, 10283, 688, 16, 27, "Input"],
Cell[532339, 10301, 4274, 78, 214, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[536650, 10384, 196, 3, 27, "Input"],
Cell[536849, 10389, 857, 12, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537743, 10406, 1638, 45, 46, "Input"],
Cell[539384, 10453, 2314, 34, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541735, 10492, 1384, 34, 46, "Input"],
Cell[543122, 10528, 9420, 165, 213, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

